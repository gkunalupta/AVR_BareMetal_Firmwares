
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  0000084a  000008be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000084a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000008c4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000920  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008ae  00000000  00000000  000009a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000079a  00000000  00000000  00001256  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003cf  00000000  00000000  000019f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000009c  00000000  00000000  00001dc0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000480  00000000  00000000  00001e5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000017c  00000000  00000000  000022dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00002458  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea e4       	ldi	r30, 0x4A	; 74
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 30       	cpi	r26, 0x06	; 6
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
  8e:	0c 94 23 04 	jmp	0x846	; 0x846 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <_Z9UART_Initv>:
}
char UART_RxChar()
{
    while( (UCSR0A & (1<<RXC0))==0);
    return UDR0;
}
  96:	87 e6       	ldi	r24, 0x67	; 103
  98:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  9c:	88 e1       	ldi	r24, 0x18	; 24
  9e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  a2:	86 e0       	ldi	r24, 0x06	; 6
  a4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  a8:	08 95       	ret

000000aa <_Z11UART_TxCharc>:
  aa:	e0 ec       	ldi	r30, 0xC0	; 192
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	90 81       	ld	r25, Z
  b0:	95 ff       	sbrs	r25, 5
  b2:	fd cf       	rjmp	.-6      	; 0xae <_Z11UART_TxCharc+0x4>
  b4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  b8:	08 95       	ret

000000ba <_Z3bith>:

void bit(uint8_t val)
{
  ba:	cf 93       	push	r28
  bc:	df 93       	push	r29
  be:	d8 2f       	mov	r29, r24
  c0:	c8 e0       	ldi	r28, 0x08	; 8
    uint8_t count = 8;
    while(count--)
    {
        if (val & 0x80)
  c2:	dd 23       	and	r29, r29
  c4:	24 f4       	brge	.+8      	; 0xce <_Z3bith+0x14>
        {
            UART_TxChar('1');
  c6:	81 e3       	ldi	r24, 0x31	; 49
  c8:	0e 94 55 00 	call	0xaa	; 0xaa <_Z11UART_TxCharc>
  cc:	03 c0       	rjmp	.+6      	; 0xd4 <_Z3bith+0x1a>
        }
        else
        {
            UART_TxChar('0');
  ce:	80 e3       	ldi	r24, 0x30	; 48
  d0:	0e 94 55 00 	call	0xaa	; 0xaa <_Z11UART_TxCharc>
        }
        val <<=1;
  d4:	dd 0f       	add	r29, r29
  d6:	c1 50       	subi	r28, 0x01	; 1
}

void bit(uint8_t val)
{
    uint8_t count = 8;
    while(count--)
  d8:	a1 f7       	brne	.-24     	; 0xc2 <_Z3bith+0x8>
        {
            UART_TxChar('0');
        }
        val <<=1;
    }
}
  da:	df 91       	pop	r29
  dc:	cf 91       	pop	r28
  de:	08 95       	ret

000000e0 <_Z11printStringPc>:
  void printString(char *myString)      /////to print any string
  {
  e0:	cf 93       	push	r28
  e2:	df 93       	push	r29
  e4:	ec 01       	movw	r28, r24

      while (*myString)
  e6:	88 81       	ld	r24, Y
  e8:	88 23       	and	r24, r24
  ea:	31 f0       	breq	.+12     	; 0xf8 <_Z11printStringPc+0x18>
  ec:	21 96       	adiw	r28, 0x01	; 1
      {
          UART_TxChar(*myString++);
  ee:	0e 94 55 00 	call	0xaa	; 0xaa <_Z11UART_TxCharc>
    }
}
  void printString(char *myString)      /////to print any string
  {

      while (*myString)
  f2:	89 91       	ld	r24, Y+
  f4:	81 11       	cpse	r24, r1
  f6:	fb cf       	rjmp	.-10     	; 0xee <_Z11printStringPc+0xe>
      {
          UART_TxChar(*myString++);
      }
  }
  f8:	df 91       	pop	r29
  fa:	cf 91       	pop	r28
  fc:	08 95       	ret

000000fe <main>:
  
      
  
int main(void)
{   vfprintf ;
  fe:	cf 93       	push	r28
 100:	df 93       	push	r29
 102:	cd b7       	in	r28, 0x3d	; 61
 104:	de b7       	in	r29, 0x3e	; 62
 106:	c4 56       	subi	r28, 0x64	; 100
 108:	d1 09       	sbc	r29, r1
 10a:	0f b6       	in	r0, 0x3f	; 63
 10c:	f8 94       	cli
 10e:	de bf       	out	0x3e, r29	; 62
 110:	0f be       	out	0x3f, r0	; 63
 112:	cd bf       	out	0x3d, r28	; 61
	
	uint16_t iDelay;
     DDRD=  0xff;
 114:	8f ef       	ldi	r24, 0xFF	; 255
 116:	8a b9       	out	0x0a, r24	; 10
    char sbuff[100];
    
    UART_Init();
 118:	0e 94 4b 00 	call	0x96	; 0x96 <_Z9UART_Initv>
    ADCSRA=0x87;
 11c:	87 e8       	ldi	r24, 0x87	; 135
 11e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    ADMUX=0b01000000;
 122:	80 e4       	ldi	r24, 0x40	; 64
 124:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
  
    while (1) 
    { 
        //put the adc code in its own function!!
        ADCSRA |= (1<<ADSC);
 128:	0a e7       	ldi	r16, 0x7A	; 122
 12a:	10 e0       	ldi	r17, 0x00	; 0
        while( ADCSRA & (1<<ADSC) );
    
        bit(ADCH);
 12c:	0f 2e       	mov	r0, r31
 12e:	f9 e7       	ldi	r31, 0x79	; 121
 130:	af 2e       	mov	r10, r31
 132:	b1 2c       	mov	r11, r1
 134:	f0 2d       	mov	r31, r0
        bit(ADCL);
 136:	0f 2e       	mov	r0, r31
 138:	f8 e7       	ldi	r31, 0x78	; 120
 13a:	ef 2e       	mov	r14, r31
 13c:	f1 2c       	mov	r15, r1
 13e:	f0 2d       	mov	r31, r0
        printString("\n");
		iDelay = ADCL;
		iDelay += (ADCH << 8);
        
        sprintf(sbuff,"%03d\n",ADC);
 140:	0f 2e       	mov	r0, r31
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	cf 2e       	mov	r12, r31
 146:	f1 e0       	ldi	r31, 0x01	; 1
 148:	df 2e       	mov	r13, r31
 14a:	f0 2d       	mov	r31, r0
 14c:	ce 01       	movw	r24, r28
 14e:	01 96       	adiw	r24, 0x01	; 1
 150:	4c 01       	movw	r8, r24
        printString(sbuff);
        _delay_ms(1000);
		
		if(ADC>500&ADC<600)
 152:	61 2c       	mov	r6, r1
        bit(ADCL);
        printString("\n");
		iDelay = ADCL;
		iDelay += (ADCH << 8);
        
        sprintf(sbuff,"%03d\n",ADC);
 154:	48 2e       	mov	r4, r24
 156:	59 2c       	mov	r5, r9
        printString(sbuff);
        _delay_ms(1000);
		
		if(ADC>500&ADC<600)
 158:	77 24       	eor	r7, r7
 15a:	73 94       	inc	r7
		PORTD=(1<<2)|(1<<4);
 15c:	0f 2e       	mov	r0, r31
 15e:	f4 e1       	ldi	r31, 0x14	; 20
 160:	2f 2e       	mov	r2, r31
 162:	f0 2d       	mov	r31, r0
		if(ADC>800&ADC<900)
		PORTD=(1<<2)|(1<<3);
 164:	0f 2e       	mov	r0, r31
 166:	fc e0       	ldi	r31, 0x0C	; 12
 168:	3f 2e       	mov	r3, r31
 16a:	f0 2d       	mov	r31, r0
    ADMUX=0b01000000;
  
    while (1) 
    { 
        //put the adc code in its own function!!
        ADCSRA |= (1<<ADSC);
 16c:	f8 01       	movw	r30, r16
 16e:	80 81       	ld	r24, Z
 170:	80 64       	ori	r24, 0x40	; 64
 172:	80 83       	st	Z, r24
        while( ADCSRA & (1<<ADSC) );
 174:	f8 01       	movw	r30, r16
 176:	80 81       	ld	r24, Z
 178:	86 fd       	sbrc	r24, 6
 17a:	fc cf       	rjmp	.-8      	; 0x174 <main+0x76>
    
        bit(ADCH);
 17c:	f5 01       	movw	r30, r10
 17e:	80 81       	ld	r24, Z
 180:	0e 94 5d 00 	call	0xba	; 0xba <_Z3bith>
        bit(ADCL);
 184:	f7 01       	movw	r30, r14
 186:	80 81       	ld	r24, Z
 188:	0e 94 5d 00 	call	0xba	; 0xba <_Z3bith>
        printString("\n");
 18c:	84 e0       	ldi	r24, 0x04	; 4
 18e:	91 e0       	ldi	r25, 0x01	; 1
 190:	0e 94 70 00 	call	0xe0	; 0xe0 <_Z11printStringPc>
		iDelay = ADCL;
 194:	f7 01       	movw	r30, r14
 196:	80 81       	ld	r24, Z
		iDelay += (ADCH << 8);
 198:	f5 01       	movw	r30, r10
 19a:	80 81       	ld	r24, Z
        
        sprintf(sbuff,"%03d\n",ADC);
 19c:	f7 01       	movw	r30, r14
 19e:	80 81       	ld	r24, Z
 1a0:	91 81       	ldd	r25, Z+1	; 0x01
 1a2:	9f 93       	push	r25
 1a4:	8f 93       	push	r24
 1a6:	df 92       	push	r13
 1a8:	cf 92       	push	r12
 1aa:	9f 92       	push	r9
 1ac:	8f 92       	push	r8
 1ae:	0e 94 39 01 	call	0x272	; 0x272 <sprintf>
        printString(sbuff);
 1b2:	84 2d       	mov	r24, r4
 1b4:	95 2d       	mov	r25, r5
 1b6:	0e 94 70 00 	call	0xe0	; 0xe0 <_Z11printStringPc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ba:	ff e3       	ldi	r31, 0x3F	; 63
 1bc:	2d e0       	ldi	r18, 0x0D	; 13
 1be:	83 e0       	ldi	r24, 0x03	; 3
 1c0:	f1 50       	subi	r31, 0x01	; 1
 1c2:	20 40       	sbci	r18, 0x00	; 0
 1c4:	80 40       	sbci	r24, 0x00	; 0
 1c6:	e1 f7       	brne	.-8      	; 0x1c0 <main+0xc2>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <main+0xcc>
 1ca:	00 00       	nop
        _delay_ms(1000);
		
		if(ADC>500&ADC<600)
 1cc:	f7 01       	movw	r30, r14
 1ce:	20 81       	ld	r18, Z
 1d0:	31 81       	ldd	r19, Z+1	; 0x01
 1d2:	40 81       	ld	r20, Z
 1d4:	51 81       	ldd	r21, Z+1	; 0x01
 1d6:	87 2d       	mov	r24, r7
 1d8:	0f 90       	pop	r0
 1da:	0f 90       	pop	r0
 1dc:	0f 90       	pop	r0
 1de:	0f 90       	pop	r0
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
 1e4:	25 3f       	cpi	r18, 0xF5	; 245
 1e6:	31 40       	sbci	r19, 0x01	; 1
 1e8:	08 f4       	brcc	.+2      	; 0x1ec <main+0xee>
 1ea:	86 2d       	mov	r24, r6
 1ec:	88 23       	and	r24, r24
 1ee:	39 f0       	breq	.+14     	; 0x1fe <main+0x100>
 1f0:	87 2d       	mov	r24, r7
 1f2:	48 35       	cpi	r20, 0x58	; 88
 1f4:	52 40       	sbci	r21, 0x02	; 2
 1f6:	08 f0       	brcs	.+2      	; 0x1fa <main+0xfc>
 1f8:	86 2d       	mov	r24, r6
 1fa:	81 11       	cpse	r24, r1
		PORTD=(1<<2)|(1<<4);
 1fc:	2b b8       	out	0x0b, r2	; 11
		if(ADC>800&ADC<900)
 1fe:	f7 01       	movw	r30, r14
 200:	20 81       	ld	r18, Z
 202:	31 81       	ldd	r19, Z+1	; 0x01
 204:	40 81       	ld	r20, Z
 206:	51 81       	ldd	r21, Z+1	; 0x01
 208:	87 2d       	mov	r24, r7
 20a:	21 32       	cpi	r18, 0x21	; 33
 20c:	33 40       	sbci	r19, 0x03	; 3
 20e:	08 f4       	brcc	.+2      	; 0x212 <main+0x114>
 210:	86 2d       	mov	r24, r6
 212:	88 23       	and	r24, r24
 214:	39 f0       	breq	.+14     	; 0x224 <main+0x126>
 216:	87 2d       	mov	r24, r7
 218:	44 38       	cpi	r20, 0x84	; 132
 21a:	53 40       	sbci	r21, 0x03	; 3
 21c:	08 f0       	brcs	.+2      	; 0x220 <main+0x122>
 21e:	86 2d       	mov	r24, r6
 220:	81 11       	cpse	r24, r1
		PORTD=(1<<2)|(1<<3);
 222:	3b b8       	out	0x0b, r3	; 11
		if(ADC<800&ADC>700)
 224:	f7 01       	movw	r30, r14
 226:	20 81       	ld	r18, Z
 228:	31 81       	ldd	r19, Z+1	; 0x01
 22a:	40 81       	ld	r20, Z
 22c:	51 81       	ldd	r21, Z+1	; 0x01
 22e:	87 2d       	mov	r24, r7
 230:	20 32       	cpi	r18, 0x20	; 32
 232:	33 40       	sbci	r19, 0x03	; 3
 234:	08 f0       	brcs	.+2      	; 0x238 <main+0x13a>
 236:	86 2d       	mov	r24, r6
 238:	88 23       	and	r24, r24
 23a:	49 f0       	breq	.+18     	; 0x24e <main+0x150>
 23c:	87 2d       	mov	r24, r7
 23e:	4d 3b       	cpi	r20, 0xBD	; 189
 240:	52 40       	sbci	r21, 0x02	; 2
 242:	08 f4       	brcc	.+2      	; 0x246 <main+0x148>
 244:	86 2d       	mov	r24, r6
 246:	88 23       	and	r24, r24
 248:	11 f0       	breq	.+4      	; 0x24e <main+0x150>
PORTD=(1<<3)|(1<<4)|(1<<5);   
 24a:	88 e3       	ldi	r24, 0x38	; 56
 24c:	8b b9       	out	0x0b, r24	; 11
	if(ADC>1000)
 24e:	f7 01       	movw	r30, r14
 250:	80 81       	ld	r24, Z
 252:	91 81       	ldd	r25, Z+1	; 0x01
 254:	89 3e       	cpi	r24, 0xE9	; 233
 256:	93 40       	sbci	r25, 0x03	; 3
 258:	10 f0       	brcs	.+4      	; 0x25e <main+0x160>
	PORTD=(1<<5)|(1<<2);
 25a:	24 e2       	ldi	r18, 0x24	; 36
 25c:	2b b9       	out	0x0b, r18	; 11
	if(ADC<100)
 25e:	f7 01       	movw	r30, r14
 260:	80 81       	ld	r24, Z
 262:	91 81       	ldd	r25, Z+1	; 0x01
 264:	84 36       	cpi	r24, 0x64	; 100
 266:	91 05       	cpc	r25, r1
 268:	08 f0       	brcs	.+2      	; 0x26c <main+0x16e>
 26a:	80 cf       	rjmp	.-256    	; 0x16c <main+0x6e>
	PORTD=(1<<4)|(1<<5);
 26c:	80 e3       	ldi	r24, 0x30	; 48
 26e:	8b b9       	out	0x0b, r24	; 11
 270:	75 cf       	rjmp	.-278    	; 0x15c <main+0x5e>

00000272 <sprintf>:
 272:	ae e0       	ldi	r26, 0x0E	; 14
 274:	b0 e0       	ldi	r27, 0x00	; 0
 276:	ef e3       	ldi	r30, 0x3F	; 63
 278:	f1 e0       	ldi	r31, 0x01	; 1
 27a:	0c 94 fa 03 	jmp	0x7f4	; 0x7f4 <__prologue_saves__+0x1c>
 27e:	0d 89       	ldd	r16, Y+21	; 0x15
 280:	1e 89       	ldd	r17, Y+22	; 0x16
 282:	86 e0       	ldi	r24, 0x06	; 6
 284:	8c 83       	std	Y+4, r24	; 0x04
 286:	1a 83       	std	Y+2, r17	; 0x02
 288:	09 83       	std	Y+1, r16	; 0x01
 28a:	8f ef       	ldi	r24, 0xFF	; 255
 28c:	9f e7       	ldi	r25, 0x7F	; 127
 28e:	9e 83       	std	Y+6, r25	; 0x06
 290:	8d 83       	std	Y+5, r24	; 0x05
 292:	ae 01       	movw	r20, r28
 294:	47 5e       	subi	r20, 0xE7	; 231
 296:	5f 4f       	sbci	r21, 0xFF	; 255
 298:	6f 89       	ldd	r22, Y+23	; 0x17
 29a:	78 8d       	ldd	r23, Y+24	; 0x18
 29c:	ce 01       	movw	r24, r28
 29e:	01 96       	adiw	r24, 0x01	; 1
 2a0:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <vfprintf>
 2a4:	ef 81       	ldd	r30, Y+7	; 0x07
 2a6:	f8 85       	ldd	r31, Y+8	; 0x08
 2a8:	e0 0f       	add	r30, r16
 2aa:	f1 1f       	adc	r31, r17
 2ac:	10 82       	st	Z, r1
 2ae:	2e 96       	adiw	r28, 0x0e	; 14
 2b0:	e4 e0       	ldi	r30, 0x04	; 4
 2b2:	0c 94 16 04 	jmp	0x82c	; 0x82c <__epilogue_restores__+0x1c>

000002b6 <vfprintf>:
 2b6:	ab e0       	ldi	r26, 0x0B	; 11
 2b8:	b0 e0       	ldi	r27, 0x00	; 0
 2ba:	e1 e6       	ldi	r30, 0x61	; 97
 2bc:	f1 e0       	ldi	r31, 0x01	; 1
 2be:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__prologue_saves__>
 2c2:	6c 01       	movw	r12, r24
 2c4:	7b 01       	movw	r14, r22
 2c6:	8a 01       	movw	r16, r20
 2c8:	fc 01       	movw	r30, r24
 2ca:	17 82       	std	Z+7, r1	; 0x07
 2cc:	16 82       	std	Z+6, r1	; 0x06
 2ce:	83 81       	ldd	r24, Z+3	; 0x03
 2d0:	81 ff       	sbrs	r24, 1
 2d2:	cc c1       	rjmp	.+920    	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 2d4:	ce 01       	movw	r24, r28
 2d6:	01 96       	adiw	r24, 0x01	; 1
 2d8:	3c 01       	movw	r6, r24
 2da:	f6 01       	movw	r30, r12
 2dc:	93 81       	ldd	r25, Z+3	; 0x03
 2de:	f7 01       	movw	r30, r14
 2e0:	93 fd       	sbrc	r25, 3
 2e2:	85 91       	lpm	r24, Z+
 2e4:	93 ff       	sbrs	r25, 3
 2e6:	81 91       	ld	r24, Z+
 2e8:	7f 01       	movw	r14, r30
 2ea:	88 23       	and	r24, r24
 2ec:	09 f4       	brne	.+2      	; 0x2f0 <vfprintf+0x3a>
 2ee:	ba c1       	rjmp	.+884    	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 2f0:	85 32       	cpi	r24, 0x25	; 37
 2f2:	39 f4       	brne	.+14     	; 0x302 <vfprintf+0x4c>
 2f4:	93 fd       	sbrc	r25, 3
 2f6:	85 91       	lpm	r24, Z+
 2f8:	93 ff       	sbrs	r25, 3
 2fa:	81 91       	ld	r24, Z+
 2fc:	7f 01       	movw	r14, r30
 2fe:	85 32       	cpi	r24, 0x25	; 37
 300:	29 f4       	brne	.+10     	; 0x30c <vfprintf+0x56>
 302:	b6 01       	movw	r22, r12
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 30a:	e7 cf       	rjmp	.-50     	; 0x2da <vfprintf+0x24>
 30c:	91 2c       	mov	r9, r1
 30e:	21 2c       	mov	r2, r1
 310:	31 2c       	mov	r3, r1
 312:	ff e1       	ldi	r31, 0x1F	; 31
 314:	f3 15       	cp	r31, r3
 316:	d8 f0       	brcs	.+54     	; 0x34e <vfprintf+0x98>
 318:	8b 32       	cpi	r24, 0x2B	; 43
 31a:	79 f0       	breq	.+30     	; 0x33a <vfprintf+0x84>
 31c:	38 f4       	brcc	.+14     	; 0x32c <vfprintf+0x76>
 31e:	80 32       	cpi	r24, 0x20	; 32
 320:	79 f0       	breq	.+30     	; 0x340 <vfprintf+0x8a>
 322:	83 32       	cpi	r24, 0x23	; 35
 324:	a1 f4       	brne	.+40     	; 0x34e <vfprintf+0x98>
 326:	23 2d       	mov	r18, r3
 328:	20 61       	ori	r18, 0x10	; 16
 32a:	1d c0       	rjmp	.+58     	; 0x366 <vfprintf+0xb0>
 32c:	8d 32       	cpi	r24, 0x2D	; 45
 32e:	61 f0       	breq	.+24     	; 0x348 <vfprintf+0x92>
 330:	80 33       	cpi	r24, 0x30	; 48
 332:	69 f4       	brne	.+26     	; 0x34e <vfprintf+0x98>
 334:	23 2d       	mov	r18, r3
 336:	21 60       	ori	r18, 0x01	; 1
 338:	16 c0       	rjmp	.+44     	; 0x366 <vfprintf+0xb0>
 33a:	83 2d       	mov	r24, r3
 33c:	82 60       	ori	r24, 0x02	; 2
 33e:	38 2e       	mov	r3, r24
 340:	e3 2d       	mov	r30, r3
 342:	e4 60       	ori	r30, 0x04	; 4
 344:	3e 2e       	mov	r3, r30
 346:	2a c0       	rjmp	.+84     	; 0x39c <vfprintf+0xe6>
 348:	f3 2d       	mov	r31, r3
 34a:	f8 60       	ori	r31, 0x08	; 8
 34c:	1d c0       	rjmp	.+58     	; 0x388 <vfprintf+0xd2>
 34e:	37 fc       	sbrc	r3, 7
 350:	2d c0       	rjmp	.+90     	; 0x3ac <vfprintf+0xf6>
 352:	20 ed       	ldi	r18, 0xD0	; 208
 354:	28 0f       	add	r18, r24
 356:	2a 30       	cpi	r18, 0x0A	; 10
 358:	40 f0       	brcs	.+16     	; 0x36a <vfprintf+0xb4>
 35a:	8e 32       	cpi	r24, 0x2E	; 46
 35c:	b9 f4       	brne	.+46     	; 0x38c <vfprintf+0xd6>
 35e:	36 fc       	sbrc	r3, 6
 360:	81 c1       	rjmp	.+770    	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 362:	23 2d       	mov	r18, r3
 364:	20 64       	ori	r18, 0x40	; 64
 366:	32 2e       	mov	r3, r18
 368:	19 c0       	rjmp	.+50     	; 0x39c <vfprintf+0xe6>
 36a:	36 fe       	sbrs	r3, 6
 36c:	06 c0       	rjmp	.+12     	; 0x37a <vfprintf+0xc4>
 36e:	8a e0       	ldi	r24, 0x0A	; 10
 370:	98 9e       	mul	r9, r24
 372:	20 0d       	add	r18, r0
 374:	11 24       	eor	r1, r1
 376:	92 2e       	mov	r9, r18
 378:	11 c0       	rjmp	.+34     	; 0x39c <vfprintf+0xe6>
 37a:	ea e0       	ldi	r30, 0x0A	; 10
 37c:	2e 9e       	mul	r2, r30
 37e:	20 0d       	add	r18, r0
 380:	11 24       	eor	r1, r1
 382:	22 2e       	mov	r2, r18
 384:	f3 2d       	mov	r31, r3
 386:	f0 62       	ori	r31, 0x20	; 32
 388:	3f 2e       	mov	r3, r31
 38a:	08 c0       	rjmp	.+16     	; 0x39c <vfprintf+0xe6>
 38c:	8c 36       	cpi	r24, 0x6C	; 108
 38e:	21 f4       	brne	.+8      	; 0x398 <vfprintf+0xe2>
 390:	83 2d       	mov	r24, r3
 392:	80 68       	ori	r24, 0x80	; 128
 394:	38 2e       	mov	r3, r24
 396:	02 c0       	rjmp	.+4      	; 0x39c <vfprintf+0xe6>
 398:	88 36       	cpi	r24, 0x68	; 104
 39a:	41 f4       	brne	.+16     	; 0x3ac <vfprintf+0xf6>
 39c:	f7 01       	movw	r30, r14
 39e:	93 fd       	sbrc	r25, 3
 3a0:	85 91       	lpm	r24, Z+
 3a2:	93 ff       	sbrs	r25, 3
 3a4:	81 91       	ld	r24, Z+
 3a6:	7f 01       	movw	r14, r30
 3a8:	81 11       	cpse	r24, r1
 3aa:	b3 cf       	rjmp	.-154    	; 0x312 <vfprintf+0x5c>
 3ac:	98 2f       	mov	r25, r24
 3ae:	9f 7d       	andi	r25, 0xDF	; 223
 3b0:	95 54       	subi	r25, 0x45	; 69
 3b2:	93 30       	cpi	r25, 0x03	; 3
 3b4:	28 f4       	brcc	.+10     	; 0x3c0 <vfprintf+0x10a>
 3b6:	0c 5f       	subi	r16, 0xFC	; 252
 3b8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ba:	9f e3       	ldi	r25, 0x3F	; 63
 3bc:	99 83       	std	Y+1, r25	; 0x01
 3be:	0d c0       	rjmp	.+26     	; 0x3da <vfprintf+0x124>
 3c0:	83 36       	cpi	r24, 0x63	; 99
 3c2:	31 f0       	breq	.+12     	; 0x3d0 <vfprintf+0x11a>
 3c4:	83 37       	cpi	r24, 0x73	; 115
 3c6:	71 f0       	breq	.+28     	; 0x3e4 <vfprintf+0x12e>
 3c8:	83 35       	cpi	r24, 0x53	; 83
 3ca:	09 f0       	breq	.+2      	; 0x3ce <vfprintf+0x118>
 3cc:	59 c0       	rjmp	.+178    	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 3ce:	21 c0       	rjmp	.+66     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3d0:	f8 01       	movw	r30, r16
 3d2:	80 81       	ld	r24, Z
 3d4:	89 83       	std	Y+1, r24	; 0x01
 3d6:	0e 5f       	subi	r16, 0xFE	; 254
 3d8:	1f 4f       	sbci	r17, 0xFF	; 255
 3da:	88 24       	eor	r8, r8
 3dc:	83 94       	inc	r8
 3de:	91 2c       	mov	r9, r1
 3e0:	53 01       	movw	r10, r6
 3e2:	13 c0       	rjmp	.+38     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3e4:	28 01       	movw	r4, r16
 3e6:	f2 e0       	ldi	r31, 0x02	; 2
 3e8:	4f 0e       	add	r4, r31
 3ea:	51 1c       	adc	r5, r1
 3ec:	f8 01       	movw	r30, r16
 3ee:	a0 80       	ld	r10, Z
 3f0:	b1 80       	ldd	r11, Z+1	; 0x01
 3f2:	36 fe       	sbrs	r3, 6
 3f4:	03 c0       	rjmp	.+6      	; 0x3fc <vfprintf+0x146>
 3f6:	69 2d       	mov	r22, r9
 3f8:	70 e0       	ldi	r23, 0x00	; 0
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <__LOCK_REGION_LENGTH__>
 3fc:	6f ef       	ldi	r22, 0xFF	; 255
 3fe:	7f ef       	ldi	r23, 0xFF	; 255
 400:	c5 01       	movw	r24, r10
 402:	0e 94 47 03 	call	0x68e	; 0x68e <strnlen>
 406:	4c 01       	movw	r8, r24
 408:	82 01       	movw	r16, r4
 40a:	f3 2d       	mov	r31, r3
 40c:	ff 77       	andi	r31, 0x7F	; 127
 40e:	3f 2e       	mov	r3, r31
 410:	16 c0       	rjmp	.+44     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 412:	28 01       	movw	r4, r16
 414:	22 e0       	ldi	r18, 0x02	; 2
 416:	42 0e       	add	r4, r18
 418:	51 1c       	adc	r5, r1
 41a:	f8 01       	movw	r30, r16
 41c:	a0 80       	ld	r10, Z
 41e:	b1 80       	ldd	r11, Z+1	; 0x01
 420:	36 fe       	sbrs	r3, 6
 422:	03 c0       	rjmp	.+6      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 424:	69 2d       	mov	r22, r9
 426:	70 e0       	ldi	r23, 0x00	; 0
 428:	02 c0       	rjmp	.+4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 42a:	6f ef       	ldi	r22, 0xFF	; 255
 42c:	7f ef       	ldi	r23, 0xFF	; 255
 42e:	c5 01       	movw	r24, r10
 430:	0e 94 3c 03 	call	0x678	; 0x678 <strnlen_P>
 434:	4c 01       	movw	r8, r24
 436:	f3 2d       	mov	r31, r3
 438:	f0 68       	ori	r31, 0x80	; 128
 43a:	3f 2e       	mov	r3, r31
 43c:	82 01       	movw	r16, r4
 43e:	33 fc       	sbrc	r3, 3
 440:	1b c0       	rjmp	.+54     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 442:	82 2d       	mov	r24, r2
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	88 16       	cp	r8, r24
 448:	99 06       	cpc	r9, r25
 44a:	b0 f4       	brcc	.+44     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 44c:	b6 01       	movw	r22, r12
 44e:	80 e2       	ldi	r24, 0x20	; 32
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 456:	2a 94       	dec	r2
 458:	f4 cf       	rjmp	.-24     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 45a:	f5 01       	movw	r30, r10
 45c:	37 fc       	sbrc	r3, 7
 45e:	85 91       	lpm	r24, Z+
 460:	37 fe       	sbrs	r3, 7
 462:	81 91       	ld	r24, Z+
 464:	5f 01       	movw	r10, r30
 466:	b6 01       	movw	r22, r12
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 46e:	21 10       	cpse	r2, r1
 470:	2a 94       	dec	r2
 472:	21 e0       	ldi	r18, 0x01	; 1
 474:	82 1a       	sub	r8, r18
 476:	91 08       	sbc	r9, r1
 478:	81 14       	cp	r8, r1
 47a:	91 04       	cpc	r9, r1
 47c:	71 f7       	brne	.-36     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 47e:	e8 c0       	rjmp	.+464    	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 480:	84 36       	cpi	r24, 0x64	; 100
 482:	11 f0       	breq	.+4      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 484:	89 36       	cpi	r24, 0x69	; 105
 486:	41 f5       	brne	.+80     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 488:	f8 01       	movw	r30, r16
 48a:	37 fe       	sbrs	r3, 7
 48c:	07 c0       	rjmp	.+14     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 48e:	60 81       	ld	r22, Z
 490:	71 81       	ldd	r23, Z+1	; 0x01
 492:	82 81       	ldd	r24, Z+2	; 0x02
 494:	93 81       	ldd	r25, Z+3	; 0x03
 496:	0c 5f       	subi	r16, 0xFC	; 252
 498:	1f 4f       	sbci	r17, 0xFF	; 255
 49a:	08 c0       	rjmp	.+16     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 49c:	60 81       	ld	r22, Z
 49e:	71 81       	ldd	r23, Z+1	; 0x01
 4a0:	07 2e       	mov	r0, r23
 4a2:	00 0c       	add	r0, r0
 4a4:	88 0b       	sbc	r24, r24
 4a6:	99 0b       	sbc	r25, r25
 4a8:	0e 5f       	subi	r16, 0xFE	; 254
 4aa:	1f 4f       	sbci	r17, 0xFF	; 255
 4ac:	f3 2d       	mov	r31, r3
 4ae:	ff 76       	andi	r31, 0x6F	; 111
 4b0:	3f 2e       	mov	r3, r31
 4b2:	97 ff       	sbrs	r25, 7
 4b4:	09 c0       	rjmp	.+18     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4b6:	90 95       	com	r25
 4b8:	80 95       	com	r24
 4ba:	70 95       	com	r23
 4bc:	61 95       	neg	r22
 4be:	7f 4f       	sbci	r23, 0xFF	; 255
 4c0:	8f 4f       	sbci	r24, 0xFF	; 255
 4c2:	9f 4f       	sbci	r25, 0xFF	; 255
 4c4:	f0 68       	ori	r31, 0x80	; 128
 4c6:	3f 2e       	mov	r3, r31
 4c8:	2a e0       	ldi	r18, 0x0A	; 10
 4ca:	30 e0       	ldi	r19, 0x00	; 0
 4cc:	a3 01       	movw	r20, r6
 4ce:	0e 94 8e 03 	call	0x71c	; 0x71c <__ultoa_invert>
 4d2:	88 2e       	mov	r8, r24
 4d4:	86 18       	sub	r8, r6
 4d6:	45 c0       	rjmp	.+138    	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 4d8:	85 37       	cpi	r24, 0x75	; 117
 4da:	31 f4       	brne	.+12     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4dc:	23 2d       	mov	r18, r3
 4de:	2f 7e       	andi	r18, 0xEF	; 239
 4e0:	b2 2e       	mov	r11, r18
 4e2:	2a e0       	ldi	r18, 0x0A	; 10
 4e4:	30 e0       	ldi	r19, 0x00	; 0
 4e6:	25 c0       	rjmp	.+74     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 4e8:	93 2d       	mov	r25, r3
 4ea:	99 7f       	andi	r25, 0xF9	; 249
 4ec:	b9 2e       	mov	r11, r25
 4ee:	8f 36       	cpi	r24, 0x6F	; 111
 4f0:	c1 f0       	breq	.+48     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 4f2:	18 f4       	brcc	.+6      	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4f4:	88 35       	cpi	r24, 0x58	; 88
 4f6:	79 f0       	breq	.+30     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 4f8:	b5 c0       	rjmp	.+362    	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 4fa:	80 37       	cpi	r24, 0x70	; 112
 4fc:	19 f0       	breq	.+6      	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4fe:	88 37       	cpi	r24, 0x78	; 120
 500:	21 f0       	breq	.+8      	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 502:	b0 c0       	rjmp	.+352    	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 504:	e9 2f       	mov	r30, r25
 506:	e0 61       	ori	r30, 0x10	; 16
 508:	be 2e       	mov	r11, r30
 50a:	b4 fe       	sbrs	r11, 4
 50c:	0d c0       	rjmp	.+26     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 50e:	fb 2d       	mov	r31, r11
 510:	f4 60       	ori	r31, 0x04	; 4
 512:	bf 2e       	mov	r11, r31
 514:	09 c0       	rjmp	.+18     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 516:	34 fe       	sbrs	r3, 4
 518:	0a c0       	rjmp	.+20     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 51a:	29 2f       	mov	r18, r25
 51c:	26 60       	ori	r18, 0x06	; 6
 51e:	b2 2e       	mov	r11, r18
 520:	06 c0       	rjmp	.+12     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 522:	28 e0       	ldi	r18, 0x08	; 8
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	05 c0       	rjmp	.+10     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 528:	20 e1       	ldi	r18, 0x10	; 16
 52a:	30 e0       	ldi	r19, 0x00	; 0
 52c:	02 c0       	rjmp	.+4      	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 52e:	20 e1       	ldi	r18, 0x10	; 16
 530:	32 e0       	ldi	r19, 0x02	; 2
 532:	f8 01       	movw	r30, r16
 534:	b7 fe       	sbrs	r11, 7
 536:	07 c0       	rjmp	.+14     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 538:	60 81       	ld	r22, Z
 53a:	71 81       	ldd	r23, Z+1	; 0x01
 53c:	82 81       	ldd	r24, Z+2	; 0x02
 53e:	93 81       	ldd	r25, Z+3	; 0x03
 540:	0c 5f       	subi	r16, 0xFC	; 252
 542:	1f 4f       	sbci	r17, 0xFF	; 255
 544:	06 c0       	rjmp	.+12     	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 546:	60 81       	ld	r22, Z
 548:	71 81       	ldd	r23, Z+1	; 0x01
 54a:	80 e0       	ldi	r24, 0x00	; 0
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	0e 5f       	subi	r16, 0xFE	; 254
 550:	1f 4f       	sbci	r17, 0xFF	; 255
 552:	a3 01       	movw	r20, r6
 554:	0e 94 8e 03 	call	0x71c	; 0x71c <__ultoa_invert>
 558:	88 2e       	mov	r8, r24
 55a:	86 18       	sub	r8, r6
 55c:	fb 2d       	mov	r31, r11
 55e:	ff 77       	andi	r31, 0x7F	; 127
 560:	3f 2e       	mov	r3, r31
 562:	36 fe       	sbrs	r3, 6
 564:	0d c0       	rjmp	.+26     	; 0x580 <__LOCK_REGION_LENGTH__+0x180>
 566:	23 2d       	mov	r18, r3
 568:	2e 7f       	andi	r18, 0xFE	; 254
 56a:	a2 2e       	mov	r10, r18
 56c:	89 14       	cp	r8, r9
 56e:	58 f4       	brcc	.+22     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 570:	34 fe       	sbrs	r3, 4
 572:	0b c0       	rjmp	.+22     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 574:	32 fc       	sbrc	r3, 2
 576:	09 c0       	rjmp	.+18     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 578:	83 2d       	mov	r24, r3
 57a:	8e 7e       	andi	r24, 0xEE	; 238
 57c:	a8 2e       	mov	r10, r24
 57e:	05 c0       	rjmp	.+10     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 580:	b8 2c       	mov	r11, r8
 582:	a3 2c       	mov	r10, r3
 584:	03 c0       	rjmp	.+6      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 586:	b8 2c       	mov	r11, r8
 588:	01 c0       	rjmp	.+2      	; 0x58c <__LOCK_REGION_LENGTH__+0x18c>
 58a:	b9 2c       	mov	r11, r9
 58c:	a4 fe       	sbrs	r10, 4
 58e:	0f c0       	rjmp	.+30     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 590:	fe 01       	movw	r30, r28
 592:	e8 0d       	add	r30, r8
 594:	f1 1d       	adc	r31, r1
 596:	80 81       	ld	r24, Z
 598:	80 33       	cpi	r24, 0x30	; 48
 59a:	21 f4       	brne	.+8      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 59c:	9a 2d       	mov	r25, r10
 59e:	99 7e       	andi	r25, 0xE9	; 233
 5a0:	a9 2e       	mov	r10, r25
 5a2:	09 c0       	rjmp	.+18     	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5a4:	a2 fe       	sbrs	r10, 2
 5a6:	06 c0       	rjmp	.+12     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5a8:	b3 94       	inc	r11
 5aa:	b3 94       	inc	r11
 5ac:	04 c0       	rjmp	.+8      	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5ae:	8a 2d       	mov	r24, r10
 5b0:	86 78       	andi	r24, 0x86	; 134
 5b2:	09 f0       	breq	.+2      	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5b4:	b3 94       	inc	r11
 5b6:	a3 fc       	sbrc	r10, 3
 5b8:	11 c0       	rjmp	.+34     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5ba:	a0 fe       	sbrs	r10, 0
 5bc:	06 c0       	rjmp	.+12     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5be:	b2 14       	cp	r11, r2
 5c0:	88 f4       	brcc	.+34     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5c2:	28 0c       	add	r2, r8
 5c4:	92 2c       	mov	r9, r2
 5c6:	9b 18       	sub	r9, r11
 5c8:	0e c0       	rjmp	.+28     	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5ca:	b2 14       	cp	r11, r2
 5cc:	60 f4       	brcc	.+24     	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5ce:	b6 01       	movw	r22, r12
 5d0:	80 e2       	ldi	r24, 0x20	; 32
 5d2:	90 e0       	ldi	r25, 0x00	; 0
 5d4:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 5d8:	b3 94       	inc	r11
 5da:	f7 cf       	rjmp	.-18     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5dc:	b2 14       	cp	r11, r2
 5de:	18 f4       	brcc	.+6      	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5e0:	2b 18       	sub	r2, r11
 5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5e4:	98 2c       	mov	r9, r8
 5e6:	21 2c       	mov	r2, r1
 5e8:	a4 fe       	sbrs	r10, 4
 5ea:	10 c0       	rjmp	.+32     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 5ec:	b6 01       	movw	r22, r12
 5ee:	80 e3       	ldi	r24, 0x30	; 48
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 5f6:	a2 fe       	sbrs	r10, 2
 5f8:	17 c0       	rjmp	.+46     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 5fa:	a1 fc       	sbrc	r10, 1
 5fc:	03 c0       	rjmp	.+6      	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 5fe:	88 e7       	ldi	r24, 0x78	; 120
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	02 c0       	rjmp	.+4      	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 604:	88 e5       	ldi	r24, 0x58	; 88
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	b6 01       	movw	r22, r12
 60a:	0c c0       	rjmp	.+24     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 60c:	8a 2d       	mov	r24, r10
 60e:	86 78       	andi	r24, 0x86	; 134
 610:	59 f0       	breq	.+22     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 612:	a1 fe       	sbrs	r10, 1
 614:	02 c0       	rjmp	.+4      	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 616:	8b e2       	ldi	r24, 0x2B	; 43
 618:	01 c0       	rjmp	.+2      	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 61a:	80 e2       	ldi	r24, 0x20	; 32
 61c:	a7 fc       	sbrc	r10, 7
 61e:	8d e2       	ldi	r24, 0x2D	; 45
 620:	b6 01       	movw	r22, r12
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 628:	89 14       	cp	r8, r9
 62a:	38 f4       	brcc	.+14     	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 62c:	b6 01       	movw	r22, r12
 62e:	80 e3       	ldi	r24, 0x30	; 48
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 636:	9a 94       	dec	r9
 638:	f7 cf       	rjmp	.-18     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 63a:	8a 94       	dec	r8
 63c:	f3 01       	movw	r30, r6
 63e:	e8 0d       	add	r30, r8
 640:	f1 1d       	adc	r31, r1
 642:	80 81       	ld	r24, Z
 644:	b6 01       	movw	r22, r12
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 64c:	81 10       	cpse	r8, r1
 64e:	f5 cf       	rjmp	.-22     	; 0x63a <__LOCK_REGION_LENGTH__+0x23a>
 650:	22 20       	and	r2, r2
 652:	09 f4       	brne	.+2      	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 654:	42 ce       	rjmp	.-892    	; 0x2da <vfprintf+0x24>
 656:	b6 01       	movw	r22, r12
 658:	80 e2       	ldi	r24, 0x20	; 32
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	0e 94 52 03 	call	0x6a4	; 0x6a4 <fputc>
 660:	2a 94       	dec	r2
 662:	f6 cf       	rjmp	.-20     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 664:	f6 01       	movw	r30, r12
 666:	86 81       	ldd	r24, Z+6	; 0x06
 668:	97 81       	ldd	r25, Z+7	; 0x07
 66a:	02 c0       	rjmp	.+4      	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 66c:	8f ef       	ldi	r24, 0xFF	; 255
 66e:	9f ef       	ldi	r25, 0xFF	; 255
 670:	2b 96       	adiw	r28, 0x0b	; 11
 672:	e2 e1       	ldi	r30, 0x12	; 18
 674:	0c 94 08 04 	jmp	0x810	; 0x810 <__epilogue_restores__>

00000678 <strnlen_P>:
 678:	fc 01       	movw	r30, r24
 67a:	05 90       	lpm	r0, Z+
 67c:	61 50       	subi	r22, 0x01	; 1
 67e:	70 40       	sbci	r23, 0x00	; 0
 680:	01 10       	cpse	r0, r1
 682:	d8 f7       	brcc	.-10     	; 0x67a <strnlen_P+0x2>
 684:	80 95       	com	r24
 686:	90 95       	com	r25
 688:	8e 0f       	add	r24, r30
 68a:	9f 1f       	adc	r25, r31
 68c:	08 95       	ret

0000068e <strnlen>:
 68e:	fc 01       	movw	r30, r24
 690:	61 50       	subi	r22, 0x01	; 1
 692:	70 40       	sbci	r23, 0x00	; 0
 694:	01 90       	ld	r0, Z+
 696:	01 10       	cpse	r0, r1
 698:	d8 f7       	brcc	.-10     	; 0x690 <strnlen+0x2>
 69a:	80 95       	com	r24
 69c:	90 95       	com	r25
 69e:	8e 0f       	add	r24, r30
 6a0:	9f 1f       	adc	r25, r31
 6a2:	08 95       	ret

000006a4 <fputc>:
 6a4:	0f 93       	push	r16
 6a6:	1f 93       	push	r17
 6a8:	cf 93       	push	r28
 6aa:	df 93       	push	r29
 6ac:	fb 01       	movw	r30, r22
 6ae:	23 81       	ldd	r18, Z+3	; 0x03
 6b0:	21 fd       	sbrc	r18, 1
 6b2:	03 c0       	rjmp	.+6      	; 0x6ba <fputc+0x16>
 6b4:	8f ef       	ldi	r24, 0xFF	; 255
 6b6:	9f ef       	ldi	r25, 0xFF	; 255
 6b8:	2c c0       	rjmp	.+88     	; 0x712 <fputc+0x6e>
 6ba:	22 ff       	sbrs	r18, 2
 6bc:	16 c0       	rjmp	.+44     	; 0x6ea <fputc+0x46>
 6be:	46 81       	ldd	r20, Z+6	; 0x06
 6c0:	57 81       	ldd	r21, Z+7	; 0x07
 6c2:	24 81       	ldd	r18, Z+4	; 0x04
 6c4:	35 81       	ldd	r19, Z+5	; 0x05
 6c6:	42 17       	cp	r20, r18
 6c8:	53 07       	cpc	r21, r19
 6ca:	44 f4       	brge	.+16     	; 0x6dc <fputc+0x38>
 6cc:	a0 81       	ld	r26, Z
 6ce:	b1 81       	ldd	r27, Z+1	; 0x01
 6d0:	9d 01       	movw	r18, r26
 6d2:	2f 5f       	subi	r18, 0xFF	; 255
 6d4:	3f 4f       	sbci	r19, 0xFF	; 255
 6d6:	31 83       	std	Z+1, r19	; 0x01
 6d8:	20 83       	st	Z, r18
 6da:	8c 93       	st	X, r24
 6dc:	26 81       	ldd	r18, Z+6	; 0x06
 6de:	37 81       	ldd	r19, Z+7	; 0x07
 6e0:	2f 5f       	subi	r18, 0xFF	; 255
 6e2:	3f 4f       	sbci	r19, 0xFF	; 255
 6e4:	37 83       	std	Z+7, r19	; 0x07
 6e6:	26 83       	std	Z+6, r18	; 0x06
 6e8:	14 c0       	rjmp	.+40     	; 0x712 <fputc+0x6e>
 6ea:	8b 01       	movw	r16, r22
 6ec:	ec 01       	movw	r28, r24
 6ee:	fb 01       	movw	r30, r22
 6f0:	00 84       	ldd	r0, Z+8	; 0x08
 6f2:	f1 85       	ldd	r31, Z+9	; 0x09
 6f4:	e0 2d       	mov	r30, r0
 6f6:	09 95       	icall
 6f8:	89 2b       	or	r24, r25
 6fa:	e1 f6       	brne	.-72     	; 0x6b4 <fputc+0x10>
 6fc:	d8 01       	movw	r26, r16
 6fe:	16 96       	adiw	r26, 0x06	; 6
 700:	8d 91       	ld	r24, X+
 702:	9c 91       	ld	r25, X
 704:	17 97       	sbiw	r26, 0x07	; 7
 706:	01 96       	adiw	r24, 0x01	; 1
 708:	17 96       	adiw	r26, 0x07	; 7
 70a:	9c 93       	st	X, r25
 70c:	8e 93       	st	-X, r24
 70e:	16 97       	sbiw	r26, 0x06	; 6
 710:	ce 01       	movw	r24, r28
 712:	df 91       	pop	r29
 714:	cf 91       	pop	r28
 716:	1f 91       	pop	r17
 718:	0f 91       	pop	r16
 71a:	08 95       	ret

0000071c <__ultoa_invert>:
 71c:	fa 01       	movw	r30, r20
 71e:	aa 27       	eor	r26, r26
 720:	28 30       	cpi	r18, 0x08	; 8
 722:	51 f1       	breq	.+84     	; 0x778 <__ultoa_invert+0x5c>
 724:	20 31       	cpi	r18, 0x10	; 16
 726:	81 f1       	breq	.+96     	; 0x788 <__ultoa_invert+0x6c>
 728:	e8 94       	clt
 72a:	6f 93       	push	r22
 72c:	6e 7f       	andi	r22, 0xFE	; 254
 72e:	6e 5f       	subi	r22, 0xFE	; 254
 730:	7f 4f       	sbci	r23, 0xFF	; 255
 732:	8f 4f       	sbci	r24, 0xFF	; 255
 734:	9f 4f       	sbci	r25, 0xFF	; 255
 736:	af 4f       	sbci	r26, 0xFF	; 255
 738:	b1 e0       	ldi	r27, 0x01	; 1
 73a:	3e d0       	rcall	.+124    	; 0x7b8 <__ultoa_invert+0x9c>
 73c:	b4 e0       	ldi	r27, 0x04	; 4
 73e:	3c d0       	rcall	.+120    	; 0x7b8 <__ultoa_invert+0x9c>
 740:	67 0f       	add	r22, r23
 742:	78 1f       	adc	r23, r24
 744:	89 1f       	adc	r24, r25
 746:	9a 1f       	adc	r25, r26
 748:	a1 1d       	adc	r26, r1
 74a:	68 0f       	add	r22, r24
 74c:	79 1f       	adc	r23, r25
 74e:	8a 1f       	adc	r24, r26
 750:	91 1d       	adc	r25, r1
 752:	a1 1d       	adc	r26, r1
 754:	6a 0f       	add	r22, r26
 756:	71 1d       	adc	r23, r1
 758:	81 1d       	adc	r24, r1
 75a:	91 1d       	adc	r25, r1
 75c:	a1 1d       	adc	r26, r1
 75e:	20 d0       	rcall	.+64     	; 0x7a0 <__ultoa_invert+0x84>
 760:	09 f4       	brne	.+2      	; 0x764 <__ultoa_invert+0x48>
 762:	68 94       	set
 764:	3f 91       	pop	r19
 766:	2a e0       	ldi	r18, 0x0A	; 10
 768:	26 9f       	mul	r18, r22
 76a:	11 24       	eor	r1, r1
 76c:	30 19       	sub	r19, r0
 76e:	30 5d       	subi	r19, 0xD0	; 208
 770:	31 93       	st	Z+, r19
 772:	de f6       	brtc	.-74     	; 0x72a <__ultoa_invert+0xe>
 774:	cf 01       	movw	r24, r30
 776:	08 95       	ret
 778:	46 2f       	mov	r20, r22
 77a:	47 70       	andi	r20, 0x07	; 7
 77c:	40 5d       	subi	r20, 0xD0	; 208
 77e:	41 93       	st	Z+, r20
 780:	b3 e0       	ldi	r27, 0x03	; 3
 782:	0f d0       	rcall	.+30     	; 0x7a2 <__ultoa_invert+0x86>
 784:	c9 f7       	brne	.-14     	; 0x778 <__ultoa_invert+0x5c>
 786:	f6 cf       	rjmp	.-20     	; 0x774 <__ultoa_invert+0x58>
 788:	46 2f       	mov	r20, r22
 78a:	4f 70       	andi	r20, 0x0F	; 15
 78c:	40 5d       	subi	r20, 0xD0	; 208
 78e:	4a 33       	cpi	r20, 0x3A	; 58
 790:	18 f0       	brcs	.+6      	; 0x798 <__ultoa_invert+0x7c>
 792:	49 5d       	subi	r20, 0xD9	; 217
 794:	31 fd       	sbrc	r19, 1
 796:	40 52       	subi	r20, 0x20	; 32
 798:	41 93       	st	Z+, r20
 79a:	02 d0       	rcall	.+4      	; 0x7a0 <__ultoa_invert+0x84>
 79c:	a9 f7       	brne	.-22     	; 0x788 <__ultoa_invert+0x6c>
 79e:	ea cf       	rjmp	.-44     	; 0x774 <__ultoa_invert+0x58>
 7a0:	b4 e0       	ldi	r27, 0x04	; 4
 7a2:	a6 95       	lsr	r26
 7a4:	97 95       	ror	r25
 7a6:	87 95       	ror	r24
 7a8:	77 95       	ror	r23
 7aa:	67 95       	ror	r22
 7ac:	ba 95       	dec	r27
 7ae:	c9 f7       	brne	.-14     	; 0x7a2 <__ultoa_invert+0x86>
 7b0:	00 97       	sbiw	r24, 0x00	; 0
 7b2:	61 05       	cpc	r22, r1
 7b4:	71 05       	cpc	r23, r1
 7b6:	08 95       	ret
 7b8:	9b 01       	movw	r18, r22
 7ba:	ac 01       	movw	r20, r24
 7bc:	0a 2e       	mov	r0, r26
 7be:	06 94       	lsr	r0
 7c0:	57 95       	ror	r21
 7c2:	47 95       	ror	r20
 7c4:	37 95       	ror	r19
 7c6:	27 95       	ror	r18
 7c8:	ba 95       	dec	r27
 7ca:	c9 f7       	brne	.-14     	; 0x7be <__ultoa_invert+0xa2>
 7cc:	62 0f       	add	r22, r18
 7ce:	73 1f       	adc	r23, r19
 7d0:	84 1f       	adc	r24, r20
 7d2:	95 1f       	adc	r25, r21
 7d4:	a0 1d       	adc	r26, r0
 7d6:	08 95       	ret

000007d8 <__prologue_saves__>:
 7d8:	2f 92       	push	r2
 7da:	3f 92       	push	r3
 7dc:	4f 92       	push	r4
 7de:	5f 92       	push	r5
 7e0:	6f 92       	push	r6
 7e2:	7f 92       	push	r7
 7e4:	8f 92       	push	r8
 7e6:	9f 92       	push	r9
 7e8:	af 92       	push	r10
 7ea:	bf 92       	push	r11
 7ec:	cf 92       	push	r12
 7ee:	df 92       	push	r13
 7f0:	ef 92       	push	r14
 7f2:	ff 92       	push	r15
 7f4:	0f 93       	push	r16
 7f6:	1f 93       	push	r17
 7f8:	cf 93       	push	r28
 7fa:	df 93       	push	r29
 7fc:	cd b7       	in	r28, 0x3d	; 61
 7fe:	de b7       	in	r29, 0x3e	; 62
 800:	ca 1b       	sub	r28, r26
 802:	db 0b       	sbc	r29, r27
 804:	0f b6       	in	r0, 0x3f	; 63
 806:	f8 94       	cli
 808:	de bf       	out	0x3e, r29	; 62
 80a:	0f be       	out	0x3f, r0	; 63
 80c:	cd bf       	out	0x3d, r28	; 61
 80e:	09 94       	ijmp

00000810 <__epilogue_restores__>:
 810:	2a 88       	ldd	r2, Y+18	; 0x12
 812:	39 88       	ldd	r3, Y+17	; 0x11
 814:	48 88       	ldd	r4, Y+16	; 0x10
 816:	5f 84       	ldd	r5, Y+15	; 0x0f
 818:	6e 84       	ldd	r6, Y+14	; 0x0e
 81a:	7d 84       	ldd	r7, Y+13	; 0x0d
 81c:	8c 84       	ldd	r8, Y+12	; 0x0c
 81e:	9b 84       	ldd	r9, Y+11	; 0x0b
 820:	aa 84       	ldd	r10, Y+10	; 0x0a
 822:	b9 84       	ldd	r11, Y+9	; 0x09
 824:	c8 84       	ldd	r12, Y+8	; 0x08
 826:	df 80       	ldd	r13, Y+7	; 0x07
 828:	ee 80       	ldd	r14, Y+6	; 0x06
 82a:	fd 80       	ldd	r15, Y+5	; 0x05
 82c:	0c 81       	ldd	r16, Y+4	; 0x04
 82e:	1b 81       	ldd	r17, Y+3	; 0x03
 830:	aa 81       	ldd	r26, Y+2	; 0x02
 832:	b9 81       	ldd	r27, Y+1	; 0x01
 834:	ce 0f       	add	r28, r30
 836:	d1 1d       	adc	r29, r1
 838:	0f b6       	in	r0, 0x3f	; 63
 83a:	f8 94       	cli
 83c:	de bf       	out	0x3e, r29	; 62
 83e:	0f be       	out	0x3f, r0	; 63
 840:	cd bf       	out	0x3d, r28	; 61
 842:	ed 01       	movw	r28, r26
 844:	08 95       	ret

00000846 <_exit>:
 846:	f8 94       	cli

00000848 <__stop_program>:
 848:	ff cf       	rjmp	.-2      	; 0x848 <__stop_program>
