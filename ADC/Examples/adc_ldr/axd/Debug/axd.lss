
axd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000852  000008c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000852  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000008d2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000930  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000970  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008ca  00000000  00000000  000009b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000079a  00000000  00000000  00001282  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003b6  00000000  00000000  00001a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000009c  00000000  00000000  00001dd4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000472  00000000  00000000  00001e70  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000017c  00000000  00000000  000022e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  0000245e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e5       	ldi	r30, 0x52	; 82
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 30       	cpi	r26, 0x0C	; 12
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
  8e:	0c 94 27 04 	jmp	0x84e	; 0x84e <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <_Z9UART_Initv>:
}
char UART_RxChar()
{
    while( (UCSR0A & (1<<RXC0))==0);
    return UDR0;
}
  96:	87 e6       	ldi	r24, 0x67	; 103
  98:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
  9c:	88 e1       	ldi	r24, 0x18	; 24
  9e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
  a2:	86 e0       	ldi	r24, 0x06	; 6
  a4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
  a8:	08 95       	ret

000000aa <_Z11UART_TxCharc>:
  aa:	e0 ec       	ldi	r30, 0xC0	; 192
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	90 81       	ld	r25, Z
  b0:	95 ff       	sbrs	r25, 5
  b2:	fd cf       	rjmp	.-6      	; 0xae <_Z11UART_TxCharc+0x4>
  b4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
  b8:	08 95       	ret

000000ba <_Z3bith>:

void bit(uint8_t val)
{
  ba:	cf 93       	push	r28
  bc:	df 93       	push	r29
  be:	d8 2f       	mov	r29, r24
  c0:	c8 e0       	ldi	r28, 0x08	; 8
    uint8_t count = 8;
    while(count--)
    {
        if (val & 0x80)
  c2:	dd 23       	and	r29, r29
  c4:	24 f4       	brge	.+8      	; 0xce <_Z3bith+0x14>
        {
            UART_TxChar('1');
  c6:	81 e3       	ldi	r24, 0x31	; 49
  c8:	0e 94 55 00 	call	0xaa	; 0xaa <_Z11UART_TxCharc>
  cc:	03 c0       	rjmp	.+6      	; 0xd4 <_Z3bith+0x1a>
        }
        else
        {
            UART_TxChar('0');
  ce:	80 e3       	ldi	r24, 0x30	; 48
  d0:	0e 94 55 00 	call	0xaa	; 0xaa <_Z11UART_TxCharc>
        }
        val <<=1;
  d4:	dd 0f       	add	r29, r29
  d6:	c1 50       	subi	r28, 0x01	; 1
}

void bit(uint8_t val)
{
    uint8_t count = 8;
    while(count--)
  d8:	a1 f7       	brne	.-24     	; 0xc2 <_Z3bith+0x8>
        {
            UART_TxChar('0');
        }
        val <<=1;
    }
}
  da:	df 91       	pop	r29
  dc:	cf 91       	pop	r28
  de:	08 95       	ret

000000e0 <_Z11printStringPc>:
  void printString(char *myString)      /////to print any string
  {
  e0:	cf 93       	push	r28
  e2:	df 93       	push	r29
  e4:	ec 01       	movw	r28, r24

      while (*myString)
  e6:	88 81       	ld	r24, Y
  e8:	88 23       	and	r24, r24
  ea:	31 f0       	breq	.+12     	; 0xf8 <_Z11printStringPc+0x18>
  ec:	21 96       	adiw	r28, 0x01	; 1
      {
          UART_TxChar(*myString++);
  ee:	0e 94 55 00 	call	0xaa	; 0xaa <_Z11UART_TxCharc>
    }
}
  void printString(char *myString)      /////to print any string
  {

      while (*myString)
  f2:	89 91       	ld	r24, Y+
  f4:	81 11       	cpse	r24, r1
  f6:	fb cf       	rjmp	.-10     	; 0xee <_Z11printStringPc+0xe>
      {
          UART_TxChar(*myString++);
      }
  }
  f8:	df 91       	pop	r29
  fa:	cf 91       	pop	r28
  fc:	08 95       	ret

000000fe <main>:
  
      
  
int main(void)
{   vfprintf ;
  fe:	cf 93       	push	r28
 100:	df 93       	push	r29
 102:	cd b7       	in	r28, 0x3d	; 61
 104:	de b7       	in	r29, 0x3e	; 62
 106:	c4 56       	subi	r28, 0x64	; 100
 108:	d1 09       	sbc	r29, r1
 10a:	0f b6       	in	r0, 0x3f	; 63
 10c:	f8 94       	cli
 10e:	de bf       	out	0x3e, r29	; 62
 110:	0f be       	out	0x3f, r0	; 63
 112:	cd bf       	out	0x3d, r28	; 61
	
	uint16_t gb_iDelay;
     DDRD=  0xff;
 114:	8f ef       	ldi	r24, 0xFF	; 255
 116:	8a b9       	out	0x0a, r24	; 10
    char gb_sbuff[100];
    
    UART_Init();
 118:	0e 94 4b 00 	call	0x96	; 0x96 <_Z9UART_Initv>
    ADCSRA=0x87;
 11c:	87 e8       	ldi	r24, 0x87	; 135
 11e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
    ADMUX=0b01000000;
 122:	80 e4       	ldi	r24, 0x40	; 64
 124:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
  printString("kunal");
 128:	80 e0       	ldi	r24, 0x00	; 0
 12a:	91 e0       	ldi	r25, 0x01	; 1
 12c:	0e 94 70 00 	call	0xe0	; 0xe0 <_Z11printStringPc>
    while (1) 
    { 
        //put the adc code in its own function!!
        ADCSRA |= (1<<ADSC);
 130:	0a e7       	ldi	r16, 0x7A	; 122
 132:	10 e0       	ldi	r17, 0x00	; 0
        while( ADCSRA & (1<<ADSC) );
    
        bit(ADCH);
 134:	0f 2e       	mov	r0, r31
 136:	f9 e7       	ldi	r31, 0x79	; 121
 138:	af 2e       	mov	r10, r31
 13a:	b1 2c       	mov	r11, r1
 13c:	f0 2d       	mov	r31, r0
        bit(ADCL);
 13e:	0f 2e       	mov	r0, r31
 140:	f8 e7       	ldi	r31, 0x78	; 120
 142:	ef 2e       	mov	r14, r31
 144:	f1 2c       	mov	r15, r1
 146:	f0 2d       	mov	r31, r0
        printString("\n");
		gb_iDelay = ADCL;
		gb_iDelay += (ADCH << 8);
        
        sprintf(gb_sbuff,"%03d\n",ADC);
 148:	0f 2e       	mov	r0, r31
 14a:	f6 e0       	ldi	r31, 0x06	; 6
 14c:	cf 2e       	mov	r12, r31
 14e:	f1 e0       	ldi	r31, 0x01	; 1
 150:	df 2e       	mov	r13, r31
 152:	f0 2d       	mov	r31, r0
 154:	ce 01       	movw	r24, r28
 156:	01 96       	adiw	r24, 0x01	; 1
 158:	4c 01       	movw	r8, r24
        printString(gb_sbuff);
        _delay_ms(1000);
		
		if(ADC>500&ADC<600)
 15a:	61 2c       	mov	r6, r1
        bit(ADCL);
        printString("\n");
		gb_iDelay = ADCL;
		gb_iDelay += (ADCH << 8);
        
        sprintf(gb_sbuff,"%03d\n",ADC);
 15c:	48 2e       	mov	r4, r24
 15e:	59 2c       	mov	r5, r9
        printString(gb_sbuff);
        _delay_ms(1000);
		
		if(ADC>500&ADC<600)
 160:	77 24       	eor	r7, r7
 162:	73 94       	inc	r7
		PORTD=(1<<2)|(1<<4);
 164:	0f 2e       	mov	r0, r31
 166:	f4 e1       	ldi	r31, 0x14	; 20
 168:	2f 2e       	mov	r2, r31
 16a:	f0 2d       	mov	r31, r0
		if(ADC>800&ADC<900)
		PORTD=(1<<2)|(1<<3);
 16c:	0f 2e       	mov	r0, r31
 16e:	fc e0       	ldi	r31, 0x0C	; 12
 170:	3f 2e       	mov	r3, r31
 172:	f0 2d       	mov	r31, r0
    ADMUX=0b01000000;
  printString("kunal");
    while (1) 
    { 
        //put the adc code in its own function!!
        ADCSRA |= (1<<ADSC);
 174:	f8 01       	movw	r30, r16
 176:	80 81       	ld	r24, Z
 178:	80 64       	ori	r24, 0x40	; 64
 17a:	80 83       	st	Z, r24
        while( ADCSRA & (1<<ADSC) );
 17c:	f8 01       	movw	r30, r16
 17e:	80 81       	ld	r24, Z
 180:	86 fd       	sbrc	r24, 6
 182:	fc cf       	rjmp	.-8      	; 0x17c <main+0x7e>
    
        bit(ADCH);
 184:	f5 01       	movw	r30, r10
 186:	80 81       	ld	r24, Z
 188:	0e 94 5d 00 	call	0xba	; 0xba <_Z3bith>
        bit(ADCL);
 18c:	f7 01       	movw	r30, r14
 18e:	80 81       	ld	r24, Z
 190:	0e 94 5d 00 	call	0xba	; 0xba <_Z3bith>
        printString("\n");
 194:	8a e0       	ldi	r24, 0x0A	; 10
 196:	91 e0       	ldi	r25, 0x01	; 1
 198:	0e 94 70 00 	call	0xe0	; 0xe0 <_Z11printStringPc>
		gb_iDelay = ADCL;
 19c:	f7 01       	movw	r30, r14
 19e:	80 81       	ld	r24, Z
		gb_iDelay += (ADCH << 8);
 1a0:	f5 01       	movw	r30, r10
 1a2:	80 81       	ld	r24, Z
        
        sprintf(gb_sbuff,"%03d\n",ADC);
 1a4:	f7 01       	movw	r30, r14
 1a6:	80 81       	ld	r24, Z
 1a8:	91 81       	ldd	r25, Z+1	; 0x01
 1aa:	9f 93       	push	r25
 1ac:	8f 93       	push	r24
 1ae:	df 92       	push	r13
 1b0:	cf 92       	push	r12
 1b2:	9f 92       	push	r9
 1b4:	8f 92       	push	r8
 1b6:	0e 94 3d 01 	call	0x27a	; 0x27a <sprintf>
        printString(gb_sbuff);
 1ba:	84 2d       	mov	r24, r4
 1bc:	95 2d       	mov	r25, r5
 1be:	0e 94 70 00 	call	0xe0	; 0xe0 <_Z11printStringPc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c2:	ff ef       	ldi	r31, 0xFF	; 255
 1c4:	23 ed       	ldi	r18, 0xD3	; 211
 1c6:	80 e3       	ldi	r24, 0x30	; 48
 1c8:	f1 50       	subi	r31, 0x01	; 1
 1ca:	20 40       	sbci	r18, 0x00	; 0
 1cc:	80 40       	sbci	r24, 0x00	; 0
 1ce:	e1 f7       	brne	.-8      	; 0x1c8 <main+0xca>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <main+0xd4>
 1d2:	00 00       	nop
        _delay_ms(1000);
		
		if(ADC>500&ADC<600)
 1d4:	f7 01       	movw	r30, r14
 1d6:	20 81       	ld	r18, Z
 1d8:	31 81       	ldd	r19, Z+1	; 0x01
 1da:	40 81       	ld	r20, Z
 1dc:	51 81       	ldd	r21, Z+1	; 0x01
 1de:	87 2d       	mov	r24, r7
 1e0:	0f 90       	pop	r0
 1e2:	0f 90       	pop	r0
 1e4:	0f 90       	pop	r0
 1e6:	0f 90       	pop	r0
 1e8:	0f 90       	pop	r0
 1ea:	0f 90       	pop	r0
 1ec:	25 3f       	cpi	r18, 0xF5	; 245
 1ee:	31 40       	sbci	r19, 0x01	; 1
 1f0:	08 f4       	brcc	.+2      	; 0x1f4 <main+0xf6>
 1f2:	86 2d       	mov	r24, r6
 1f4:	88 23       	and	r24, r24
 1f6:	39 f0       	breq	.+14     	; 0x206 <main+0x108>
 1f8:	87 2d       	mov	r24, r7
 1fa:	48 35       	cpi	r20, 0x58	; 88
 1fc:	52 40       	sbci	r21, 0x02	; 2
 1fe:	08 f0       	brcs	.+2      	; 0x202 <main+0x104>
 200:	86 2d       	mov	r24, r6
 202:	81 11       	cpse	r24, r1
		PORTD=(1<<2)|(1<<4);
 204:	2b b8       	out	0x0b, r2	; 11
		if(ADC>800&ADC<900)
 206:	f7 01       	movw	r30, r14
 208:	20 81       	ld	r18, Z
 20a:	31 81       	ldd	r19, Z+1	; 0x01
 20c:	40 81       	ld	r20, Z
 20e:	51 81       	ldd	r21, Z+1	; 0x01
 210:	87 2d       	mov	r24, r7
 212:	21 32       	cpi	r18, 0x21	; 33
 214:	33 40       	sbci	r19, 0x03	; 3
 216:	08 f4       	brcc	.+2      	; 0x21a <main+0x11c>
 218:	86 2d       	mov	r24, r6
 21a:	88 23       	and	r24, r24
 21c:	39 f0       	breq	.+14     	; 0x22c <main+0x12e>
 21e:	87 2d       	mov	r24, r7
 220:	44 38       	cpi	r20, 0x84	; 132
 222:	53 40       	sbci	r21, 0x03	; 3
 224:	08 f0       	brcs	.+2      	; 0x228 <main+0x12a>
 226:	86 2d       	mov	r24, r6
 228:	81 11       	cpse	r24, r1
		PORTD=(1<<2)|(1<<3);
 22a:	3b b8       	out	0x0b, r3	; 11
		if(ADC<800&ADC>700)
 22c:	f7 01       	movw	r30, r14
 22e:	20 81       	ld	r18, Z
 230:	31 81       	ldd	r19, Z+1	; 0x01
 232:	40 81       	ld	r20, Z
 234:	51 81       	ldd	r21, Z+1	; 0x01
 236:	87 2d       	mov	r24, r7
 238:	20 32       	cpi	r18, 0x20	; 32
 23a:	33 40       	sbci	r19, 0x03	; 3
 23c:	08 f0       	brcs	.+2      	; 0x240 <main+0x142>
 23e:	86 2d       	mov	r24, r6
 240:	88 23       	and	r24, r24
 242:	49 f0       	breq	.+18     	; 0x256 <main+0x158>
 244:	87 2d       	mov	r24, r7
 246:	4d 3b       	cpi	r20, 0xBD	; 189
 248:	52 40       	sbci	r21, 0x02	; 2
 24a:	08 f4       	brcc	.+2      	; 0x24e <main+0x150>
 24c:	86 2d       	mov	r24, r6
 24e:	88 23       	and	r24, r24
 250:	11 f0       	breq	.+4      	; 0x256 <main+0x158>
PORTD=(1<<3)|(1<<4)|(1<<5);   
 252:	88 e3       	ldi	r24, 0x38	; 56
 254:	8b b9       	out	0x0b, r24	; 11
	if(ADC>1000)
 256:	f7 01       	movw	r30, r14
 258:	80 81       	ld	r24, Z
 25a:	91 81       	ldd	r25, Z+1	; 0x01
 25c:	89 3e       	cpi	r24, 0xE9	; 233
 25e:	93 40       	sbci	r25, 0x03	; 3
 260:	10 f0       	brcs	.+4      	; 0x266 <main+0x168>
	PORTD=(1<<5)|(1<<2);
 262:	24 e2       	ldi	r18, 0x24	; 36
 264:	2b b9       	out	0x0b, r18	; 11
	if(ADC<100)
 266:	f7 01       	movw	r30, r14
 268:	80 81       	ld	r24, Z
 26a:	91 81       	ldd	r25, Z+1	; 0x01
 26c:	84 36       	cpi	r24, 0x64	; 100
 26e:	91 05       	cpc	r25, r1
 270:	08 f0       	brcs	.+2      	; 0x274 <main+0x176>
 272:	80 cf       	rjmp	.-256    	; 0x174 <main+0x76>
	PORTD=(1<<4)|(1<<5);
 274:	80 e3       	ldi	r24, 0x30	; 48
 276:	8b b9       	out	0x0b, r24	; 11
 278:	75 cf       	rjmp	.-278    	; 0x164 <main+0x66>

0000027a <sprintf>:
 27a:	ae e0       	ldi	r26, 0x0E	; 14
 27c:	b0 e0       	ldi	r27, 0x00	; 0
 27e:	e3 e4       	ldi	r30, 0x43	; 67
 280:	f1 e0       	ldi	r31, 0x01	; 1
 282:	0c 94 fe 03 	jmp	0x7fc	; 0x7fc <__prologue_saves__+0x1c>
 286:	0d 89       	ldd	r16, Y+21	; 0x15
 288:	1e 89       	ldd	r17, Y+22	; 0x16
 28a:	86 e0       	ldi	r24, 0x06	; 6
 28c:	8c 83       	std	Y+4, r24	; 0x04
 28e:	1a 83       	std	Y+2, r17	; 0x02
 290:	09 83       	std	Y+1, r16	; 0x01
 292:	8f ef       	ldi	r24, 0xFF	; 255
 294:	9f e7       	ldi	r25, 0x7F	; 127
 296:	9e 83       	std	Y+6, r25	; 0x06
 298:	8d 83       	std	Y+5, r24	; 0x05
 29a:	ae 01       	movw	r20, r28
 29c:	47 5e       	subi	r20, 0xE7	; 231
 29e:	5f 4f       	sbci	r21, 0xFF	; 255
 2a0:	6f 89       	ldd	r22, Y+23	; 0x17
 2a2:	78 8d       	ldd	r23, Y+24	; 0x18
 2a4:	ce 01       	movw	r24, r28
 2a6:	01 96       	adiw	r24, 0x01	; 1
 2a8:	0e 94 5f 01 	call	0x2be	; 0x2be <vfprintf>
 2ac:	ef 81       	ldd	r30, Y+7	; 0x07
 2ae:	f8 85       	ldd	r31, Y+8	; 0x08
 2b0:	e0 0f       	add	r30, r16
 2b2:	f1 1f       	adc	r31, r17
 2b4:	10 82       	st	Z, r1
 2b6:	2e 96       	adiw	r28, 0x0e	; 14
 2b8:	e4 e0       	ldi	r30, 0x04	; 4
 2ba:	0c 94 1a 04 	jmp	0x834	; 0x834 <__epilogue_restores__+0x1c>

000002be <vfprintf>:
 2be:	ab e0       	ldi	r26, 0x0B	; 11
 2c0:	b0 e0       	ldi	r27, 0x00	; 0
 2c2:	e5 e6       	ldi	r30, 0x65	; 101
 2c4:	f1 e0       	ldi	r31, 0x01	; 1
 2c6:	0c 94 f0 03 	jmp	0x7e0	; 0x7e0 <__prologue_saves__>
 2ca:	6c 01       	movw	r12, r24
 2cc:	7b 01       	movw	r14, r22
 2ce:	8a 01       	movw	r16, r20
 2d0:	fc 01       	movw	r30, r24
 2d2:	17 82       	std	Z+7, r1	; 0x07
 2d4:	16 82       	std	Z+6, r1	; 0x06
 2d6:	83 81       	ldd	r24, Z+3	; 0x03
 2d8:	81 ff       	sbrs	r24, 1
 2da:	cc c1       	rjmp	.+920    	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 2dc:	ce 01       	movw	r24, r28
 2de:	01 96       	adiw	r24, 0x01	; 1
 2e0:	3c 01       	movw	r6, r24
 2e2:	f6 01       	movw	r30, r12
 2e4:	93 81       	ldd	r25, Z+3	; 0x03
 2e6:	f7 01       	movw	r30, r14
 2e8:	93 fd       	sbrc	r25, 3
 2ea:	85 91       	lpm	r24, Z+
 2ec:	93 ff       	sbrs	r25, 3
 2ee:	81 91       	ld	r24, Z+
 2f0:	7f 01       	movw	r14, r30
 2f2:	88 23       	and	r24, r24
 2f4:	09 f4       	brne	.+2      	; 0x2f8 <vfprintf+0x3a>
 2f6:	ba c1       	rjmp	.+884    	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 2f8:	85 32       	cpi	r24, 0x25	; 37
 2fa:	39 f4       	brne	.+14     	; 0x30a <vfprintf+0x4c>
 2fc:	93 fd       	sbrc	r25, 3
 2fe:	85 91       	lpm	r24, Z+
 300:	93 ff       	sbrs	r25, 3
 302:	81 91       	ld	r24, Z+
 304:	7f 01       	movw	r14, r30
 306:	85 32       	cpi	r24, 0x25	; 37
 308:	29 f4       	brne	.+10     	; 0x314 <vfprintf+0x56>
 30a:	b6 01       	movw	r22, r12
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	0e 94 56 03 	call	0x6ac	; 0x6ac <fputc>
 312:	e7 cf       	rjmp	.-50     	; 0x2e2 <vfprintf+0x24>
 314:	91 2c       	mov	r9, r1
 316:	21 2c       	mov	r2, r1
 318:	31 2c       	mov	r3, r1
 31a:	ff e1       	ldi	r31, 0x1F	; 31
 31c:	f3 15       	cp	r31, r3
 31e:	d8 f0       	brcs	.+54     	; 0x356 <vfprintf+0x98>
 320:	8b 32       	cpi	r24, 0x2B	; 43
 322:	79 f0       	breq	.+30     	; 0x342 <vfprintf+0x84>
 324:	38 f4       	brcc	.+14     	; 0x334 <vfprintf+0x76>
 326:	80 32       	cpi	r24, 0x20	; 32
 328:	79 f0       	breq	.+30     	; 0x348 <vfprintf+0x8a>
 32a:	83 32       	cpi	r24, 0x23	; 35
 32c:	a1 f4       	brne	.+40     	; 0x356 <vfprintf+0x98>
 32e:	23 2d       	mov	r18, r3
 330:	20 61       	ori	r18, 0x10	; 16
 332:	1d c0       	rjmp	.+58     	; 0x36e <vfprintf+0xb0>
 334:	8d 32       	cpi	r24, 0x2D	; 45
 336:	61 f0       	breq	.+24     	; 0x350 <vfprintf+0x92>
 338:	80 33       	cpi	r24, 0x30	; 48
 33a:	69 f4       	brne	.+26     	; 0x356 <vfprintf+0x98>
 33c:	23 2d       	mov	r18, r3
 33e:	21 60       	ori	r18, 0x01	; 1
 340:	16 c0       	rjmp	.+44     	; 0x36e <vfprintf+0xb0>
 342:	83 2d       	mov	r24, r3
 344:	82 60       	ori	r24, 0x02	; 2
 346:	38 2e       	mov	r3, r24
 348:	e3 2d       	mov	r30, r3
 34a:	e4 60       	ori	r30, 0x04	; 4
 34c:	3e 2e       	mov	r3, r30
 34e:	2a c0       	rjmp	.+84     	; 0x3a4 <vfprintf+0xe6>
 350:	f3 2d       	mov	r31, r3
 352:	f8 60       	ori	r31, 0x08	; 8
 354:	1d c0       	rjmp	.+58     	; 0x390 <vfprintf+0xd2>
 356:	37 fc       	sbrc	r3, 7
 358:	2d c0       	rjmp	.+90     	; 0x3b4 <vfprintf+0xf6>
 35a:	20 ed       	ldi	r18, 0xD0	; 208
 35c:	28 0f       	add	r18, r24
 35e:	2a 30       	cpi	r18, 0x0A	; 10
 360:	40 f0       	brcs	.+16     	; 0x372 <vfprintf+0xb4>
 362:	8e 32       	cpi	r24, 0x2E	; 46
 364:	b9 f4       	brne	.+46     	; 0x394 <vfprintf+0xd6>
 366:	36 fc       	sbrc	r3, 6
 368:	81 c1       	rjmp	.+770    	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 36a:	23 2d       	mov	r18, r3
 36c:	20 64       	ori	r18, 0x40	; 64
 36e:	32 2e       	mov	r3, r18
 370:	19 c0       	rjmp	.+50     	; 0x3a4 <vfprintf+0xe6>
 372:	36 fe       	sbrs	r3, 6
 374:	06 c0       	rjmp	.+12     	; 0x382 <vfprintf+0xc4>
 376:	8a e0       	ldi	r24, 0x0A	; 10
 378:	98 9e       	mul	r9, r24
 37a:	20 0d       	add	r18, r0
 37c:	11 24       	eor	r1, r1
 37e:	92 2e       	mov	r9, r18
 380:	11 c0       	rjmp	.+34     	; 0x3a4 <vfprintf+0xe6>
 382:	ea e0       	ldi	r30, 0x0A	; 10
 384:	2e 9e       	mul	r2, r30
 386:	20 0d       	add	r18, r0
 388:	11 24       	eor	r1, r1
 38a:	22 2e       	mov	r2, r18
 38c:	f3 2d       	mov	r31, r3
 38e:	f0 62       	ori	r31, 0x20	; 32
 390:	3f 2e       	mov	r3, r31
 392:	08 c0       	rjmp	.+16     	; 0x3a4 <vfprintf+0xe6>
 394:	8c 36       	cpi	r24, 0x6C	; 108
 396:	21 f4       	brne	.+8      	; 0x3a0 <vfprintf+0xe2>
 398:	83 2d       	mov	r24, r3
 39a:	80 68       	ori	r24, 0x80	; 128
 39c:	38 2e       	mov	r3, r24
 39e:	02 c0       	rjmp	.+4      	; 0x3a4 <vfprintf+0xe6>
 3a0:	88 36       	cpi	r24, 0x68	; 104
 3a2:	41 f4       	brne	.+16     	; 0x3b4 <vfprintf+0xf6>
 3a4:	f7 01       	movw	r30, r14
 3a6:	93 fd       	sbrc	r25, 3
 3a8:	85 91       	lpm	r24, Z+
 3aa:	93 ff       	sbrs	r25, 3
 3ac:	81 91       	ld	r24, Z+
 3ae:	7f 01       	movw	r14, r30
 3b0:	81 11       	cpse	r24, r1
 3b2:	b3 cf       	rjmp	.-154    	; 0x31a <vfprintf+0x5c>
 3b4:	98 2f       	mov	r25, r24
 3b6:	9f 7d       	andi	r25, 0xDF	; 223
 3b8:	95 54       	subi	r25, 0x45	; 69
 3ba:	93 30       	cpi	r25, 0x03	; 3
 3bc:	28 f4       	brcc	.+10     	; 0x3c8 <vfprintf+0x10a>
 3be:	0c 5f       	subi	r16, 0xFC	; 252
 3c0:	1f 4f       	sbci	r17, 0xFF	; 255
 3c2:	9f e3       	ldi	r25, 0x3F	; 63
 3c4:	99 83       	std	Y+1, r25	; 0x01
 3c6:	0d c0       	rjmp	.+26     	; 0x3e2 <vfprintf+0x124>
 3c8:	83 36       	cpi	r24, 0x63	; 99
 3ca:	31 f0       	breq	.+12     	; 0x3d8 <vfprintf+0x11a>
 3cc:	83 37       	cpi	r24, 0x73	; 115
 3ce:	71 f0       	breq	.+28     	; 0x3ec <vfprintf+0x12e>
 3d0:	83 35       	cpi	r24, 0x53	; 83
 3d2:	09 f0       	breq	.+2      	; 0x3d6 <vfprintf+0x118>
 3d4:	59 c0       	rjmp	.+178    	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 3d6:	21 c0       	rjmp	.+66     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3d8:	f8 01       	movw	r30, r16
 3da:	80 81       	ld	r24, Z
 3dc:	89 83       	std	Y+1, r24	; 0x01
 3de:	0e 5f       	subi	r16, 0xFE	; 254
 3e0:	1f 4f       	sbci	r17, 0xFF	; 255
 3e2:	88 24       	eor	r8, r8
 3e4:	83 94       	inc	r8
 3e6:	91 2c       	mov	r9, r1
 3e8:	53 01       	movw	r10, r6
 3ea:	13 c0       	rjmp	.+38     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3ec:	28 01       	movw	r4, r16
 3ee:	f2 e0       	ldi	r31, 0x02	; 2
 3f0:	4f 0e       	add	r4, r31
 3f2:	51 1c       	adc	r5, r1
 3f4:	f8 01       	movw	r30, r16
 3f6:	a0 80       	ld	r10, Z
 3f8:	b1 80       	ldd	r11, Z+1	; 0x01
 3fa:	36 fe       	sbrs	r3, 6
 3fc:	03 c0       	rjmp	.+6      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fe:	69 2d       	mov	r22, r9
 400:	70 e0       	ldi	r23, 0x00	; 0
 402:	02 c0       	rjmp	.+4      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 404:	6f ef       	ldi	r22, 0xFF	; 255
 406:	7f ef       	ldi	r23, 0xFF	; 255
 408:	c5 01       	movw	r24, r10
 40a:	0e 94 4b 03 	call	0x696	; 0x696 <strnlen>
 40e:	4c 01       	movw	r8, r24
 410:	82 01       	movw	r16, r4
 412:	f3 2d       	mov	r31, r3
 414:	ff 77       	andi	r31, 0x7F	; 127
 416:	3f 2e       	mov	r3, r31
 418:	16 c0       	rjmp	.+44     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 41a:	28 01       	movw	r4, r16
 41c:	22 e0       	ldi	r18, 0x02	; 2
 41e:	42 0e       	add	r4, r18
 420:	51 1c       	adc	r5, r1
 422:	f8 01       	movw	r30, r16
 424:	a0 80       	ld	r10, Z
 426:	b1 80       	ldd	r11, Z+1	; 0x01
 428:	36 fe       	sbrs	r3, 6
 42a:	03 c0       	rjmp	.+6      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 42c:	69 2d       	mov	r22, r9
 42e:	70 e0       	ldi	r23, 0x00	; 0
 430:	02 c0       	rjmp	.+4      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 432:	6f ef       	ldi	r22, 0xFF	; 255
 434:	7f ef       	ldi	r23, 0xFF	; 255
 436:	c5 01       	movw	r24, r10
 438:	0e 94 40 03 	call	0x680	; 0x680 <strnlen_P>
 43c:	4c 01       	movw	r8, r24
 43e:	f3 2d       	mov	r31, r3
 440:	f0 68       	ori	r31, 0x80	; 128
 442:	3f 2e       	mov	r3, r31
 444:	82 01       	movw	r16, r4
 446:	33 fc       	sbrc	r3, 3
 448:	1b c0       	rjmp	.+54     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 44a:	82 2d       	mov	r24, r2
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	88 16       	cp	r8, r24
 450:	99 06       	cpc	r9, r25
 452:	b0 f4       	brcc	.+44     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 454:	b6 01       	movw	r22, r12
 456:	80 e2       	ldi	r24, 0x20	; 32
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	0e 94 56 03 	call	0x6ac	; 0x6ac <fputc>
 45e:	2a 94       	dec	r2
 460:	f4 cf       	rjmp	.-24     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 462:	f5 01       	movw	r30, r10
 464:	37 fc       	sbrc	r3, 7
 466:	85 91       	lpm	r24, Z+
 468:	37 fe       	sbrs	r3, 7
 46a:	81 91       	ld	r24, Z+
 46c:	5f 01       	movw	r10, r30
 46e:	b6 01       	movw	r22, r12
 470:	90 e0       	ldi	r25, 0x00	; 0
 472:	0e 94 56 03 	call	0x6ac	; 0x6ac <fputc>
 476:	21 10       	cpse	r2, r1
 478:	2a 94       	dec	r2
 47a:	21 e0       	ldi	r18, 0x01	; 1
 47c:	82 1a       	sub	r8, r18
 47e:	91 08       	sbc	r9, r1
 480:	81 14       	cp	r8, r1
 482:	91 04       	cpc	r9, r1
 484:	71 f7       	brne	.-36     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 486:	e8 c0       	rjmp	.+464    	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 488:	84 36       	cpi	r24, 0x64	; 100
 48a:	11 f0       	breq	.+4      	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 48c:	89 36       	cpi	r24, 0x69	; 105
 48e:	41 f5       	brne	.+80     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 490:	f8 01       	movw	r30, r16
 492:	37 fe       	sbrs	r3, 7
 494:	07 c0       	rjmp	.+14     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 496:	60 81       	ld	r22, Z
 498:	71 81       	ldd	r23, Z+1	; 0x01
 49a:	82 81       	ldd	r24, Z+2	; 0x02
 49c:	93 81       	ldd	r25, Z+3	; 0x03
 49e:	0c 5f       	subi	r16, 0xFC	; 252
 4a0:	1f 4f       	sbci	r17, 0xFF	; 255
 4a2:	08 c0       	rjmp	.+16     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4a4:	60 81       	ld	r22, Z
 4a6:	71 81       	ldd	r23, Z+1	; 0x01
 4a8:	07 2e       	mov	r0, r23
 4aa:	00 0c       	add	r0, r0
 4ac:	88 0b       	sbc	r24, r24
 4ae:	99 0b       	sbc	r25, r25
 4b0:	0e 5f       	subi	r16, 0xFE	; 254
 4b2:	1f 4f       	sbci	r17, 0xFF	; 255
 4b4:	f3 2d       	mov	r31, r3
 4b6:	ff 76       	andi	r31, 0x6F	; 111
 4b8:	3f 2e       	mov	r3, r31
 4ba:	97 ff       	sbrs	r25, 7
 4bc:	09 c0       	rjmp	.+18     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4be:	90 95       	com	r25
 4c0:	80 95       	com	r24
 4c2:	70 95       	com	r23
 4c4:	61 95       	neg	r22
 4c6:	7f 4f       	sbci	r23, 0xFF	; 255
 4c8:	8f 4f       	sbci	r24, 0xFF	; 255
 4ca:	9f 4f       	sbci	r25, 0xFF	; 255
 4cc:	f0 68       	ori	r31, 0x80	; 128
 4ce:	3f 2e       	mov	r3, r31
 4d0:	2a e0       	ldi	r18, 0x0A	; 10
 4d2:	30 e0       	ldi	r19, 0x00	; 0
 4d4:	a3 01       	movw	r20, r6
 4d6:	0e 94 92 03 	call	0x724	; 0x724 <__ultoa_invert>
 4da:	88 2e       	mov	r8, r24
 4dc:	86 18       	sub	r8, r6
 4de:	45 c0       	rjmp	.+138    	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 4e0:	85 37       	cpi	r24, 0x75	; 117
 4e2:	31 f4       	brne	.+12     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4e4:	23 2d       	mov	r18, r3
 4e6:	2f 7e       	andi	r18, 0xEF	; 239
 4e8:	b2 2e       	mov	r11, r18
 4ea:	2a e0       	ldi	r18, 0x0A	; 10
 4ec:	30 e0       	ldi	r19, 0x00	; 0
 4ee:	25 c0       	rjmp	.+74     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 4f0:	93 2d       	mov	r25, r3
 4f2:	99 7f       	andi	r25, 0xF9	; 249
 4f4:	b9 2e       	mov	r11, r25
 4f6:	8f 36       	cpi	r24, 0x6F	; 111
 4f8:	c1 f0       	breq	.+48     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 4fa:	18 f4       	brcc	.+6      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4fc:	88 35       	cpi	r24, 0x58	; 88
 4fe:	79 f0       	breq	.+30     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 500:	b5 c0       	rjmp	.+362    	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 502:	80 37       	cpi	r24, 0x70	; 112
 504:	19 f0       	breq	.+6      	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 506:	88 37       	cpi	r24, 0x78	; 120
 508:	21 f0       	breq	.+8      	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 50a:	b0 c0       	rjmp	.+352    	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 50c:	e9 2f       	mov	r30, r25
 50e:	e0 61       	ori	r30, 0x10	; 16
 510:	be 2e       	mov	r11, r30
 512:	b4 fe       	sbrs	r11, 4
 514:	0d c0       	rjmp	.+26     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 516:	fb 2d       	mov	r31, r11
 518:	f4 60       	ori	r31, 0x04	; 4
 51a:	bf 2e       	mov	r11, r31
 51c:	09 c0       	rjmp	.+18     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 51e:	34 fe       	sbrs	r3, 4
 520:	0a c0       	rjmp	.+20     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 522:	29 2f       	mov	r18, r25
 524:	26 60       	ori	r18, 0x06	; 6
 526:	b2 2e       	mov	r11, r18
 528:	06 c0       	rjmp	.+12     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 52a:	28 e0       	ldi	r18, 0x08	; 8
 52c:	30 e0       	ldi	r19, 0x00	; 0
 52e:	05 c0       	rjmp	.+10     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 530:	20 e1       	ldi	r18, 0x10	; 16
 532:	30 e0       	ldi	r19, 0x00	; 0
 534:	02 c0       	rjmp	.+4      	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 536:	20 e1       	ldi	r18, 0x10	; 16
 538:	32 e0       	ldi	r19, 0x02	; 2
 53a:	f8 01       	movw	r30, r16
 53c:	b7 fe       	sbrs	r11, 7
 53e:	07 c0       	rjmp	.+14     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 540:	60 81       	ld	r22, Z
 542:	71 81       	ldd	r23, Z+1	; 0x01
 544:	82 81       	ldd	r24, Z+2	; 0x02
 546:	93 81       	ldd	r25, Z+3	; 0x03
 548:	0c 5f       	subi	r16, 0xFC	; 252
 54a:	1f 4f       	sbci	r17, 0xFF	; 255
 54c:	06 c0       	rjmp	.+12     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 54e:	60 81       	ld	r22, Z
 550:	71 81       	ldd	r23, Z+1	; 0x01
 552:	80 e0       	ldi	r24, 0x00	; 0
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	0e 5f       	subi	r16, 0xFE	; 254
 558:	1f 4f       	sbci	r17, 0xFF	; 255
 55a:	a3 01       	movw	r20, r6
 55c:	0e 94 92 03 	call	0x724	; 0x724 <__ultoa_invert>
 560:	88 2e       	mov	r8, r24
 562:	86 18       	sub	r8, r6
 564:	fb 2d       	mov	r31, r11
 566:	ff 77       	andi	r31, 0x7F	; 127
 568:	3f 2e       	mov	r3, r31
 56a:	36 fe       	sbrs	r3, 6
 56c:	0d c0       	rjmp	.+26     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 56e:	23 2d       	mov	r18, r3
 570:	2e 7f       	andi	r18, 0xFE	; 254
 572:	a2 2e       	mov	r10, r18
 574:	89 14       	cp	r8, r9
 576:	58 f4       	brcc	.+22     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 578:	34 fe       	sbrs	r3, 4
 57a:	0b c0       	rjmp	.+22     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 57c:	32 fc       	sbrc	r3, 2
 57e:	09 c0       	rjmp	.+18     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 580:	83 2d       	mov	r24, r3
 582:	8e 7e       	andi	r24, 0xEE	; 238
 584:	a8 2e       	mov	r10, r24
 586:	05 c0       	rjmp	.+10     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 588:	b8 2c       	mov	r11, r8
 58a:	a3 2c       	mov	r10, r3
 58c:	03 c0       	rjmp	.+6      	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 58e:	b8 2c       	mov	r11, r8
 590:	01 c0       	rjmp	.+2      	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 592:	b9 2c       	mov	r11, r9
 594:	a4 fe       	sbrs	r10, 4
 596:	0f c0       	rjmp	.+30     	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 598:	fe 01       	movw	r30, r28
 59a:	e8 0d       	add	r30, r8
 59c:	f1 1d       	adc	r31, r1
 59e:	80 81       	ld	r24, Z
 5a0:	80 33       	cpi	r24, 0x30	; 48
 5a2:	21 f4       	brne	.+8      	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5a4:	9a 2d       	mov	r25, r10
 5a6:	99 7e       	andi	r25, 0xE9	; 233
 5a8:	a9 2e       	mov	r10, r25
 5aa:	09 c0       	rjmp	.+18     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5ac:	a2 fe       	sbrs	r10, 2
 5ae:	06 c0       	rjmp	.+12     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5b0:	b3 94       	inc	r11
 5b2:	b3 94       	inc	r11
 5b4:	04 c0       	rjmp	.+8      	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5b6:	8a 2d       	mov	r24, r10
 5b8:	86 78       	andi	r24, 0x86	; 134
 5ba:	09 f0       	breq	.+2      	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5bc:	b3 94       	inc	r11
 5be:	a3 fc       	sbrc	r10, 3
 5c0:	11 c0       	rjmp	.+34     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5c2:	a0 fe       	sbrs	r10, 0
 5c4:	06 c0       	rjmp	.+12     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5c6:	b2 14       	cp	r11, r2
 5c8:	88 f4       	brcc	.+34     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5ca:	28 0c       	add	r2, r8
 5cc:	92 2c       	mov	r9, r2
 5ce:	9b 18       	sub	r9, r11
 5d0:	0e c0       	rjmp	.+28     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5d2:	b2 14       	cp	r11, r2
 5d4:	60 f4       	brcc	.+24     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5d6:	b6 01       	movw	r22, r12
 5d8:	80 e2       	ldi	r24, 0x20	; 32
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	0e 94 56 03 	call	0x6ac	; 0x6ac <fputc>
 5e0:	b3 94       	inc	r11
 5e2:	f7 cf       	rjmp	.-18     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5e4:	b2 14       	cp	r11, r2
 5e6:	18 f4       	brcc	.+6      	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5e8:	2b 18       	sub	r2, r11
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5ec:	98 2c       	mov	r9, r8
 5ee:	21 2c       	mov	r2, r1
 5f0:	a4 fe       	sbrs	r10, 4
 5f2:	10 c0       	rjmp	.+32     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 5f4:	b6 01       	movw	r22, r12
 5f6:	80 e3       	ldi	r24, 0x30	; 48
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	0e 94 56 03 	call	0x6ac	; 0x6ac <fputc>
 5fe:	a2 fe       	sbrs	r10, 2
 600:	17 c0       	rjmp	.+46     	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 602:	a1 fc       	sbrc	r10, 1
 604:	03 c0       	rjmp	.+6      	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 606:	88 e7       	ldi	r24, 0x78	; 120
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	02 c0       	rjmp	.+4      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 60c:	88 e5       	ldi	r24, 0x58	; 88
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	b6 01       	movw	r22, r12
 612:	0c c0       	rjmp	.+24     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 614:	8a 2d       	mov	r24, r10
 616:	86 78       	andi	r24, 0x86	; 134
 618:	59 f0       	breq	.+22     	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 61a:	a1 fe       	sbrs	r10, 1
 61c:	02 c0       	rjmp	.+4      	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 61e:	8b e2       	ldi	r24, 0x2B	; 43
 620:	01 c0       	rjmp	.+2      	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 622:	80 e2       	ldi	r24, 0x20	; 32
 624:	a7 fc       	sbrc	r10, 7
 626:	8d e2       	ldi	r24, 0x2D	; 45
 628:	b6 01       	movw	r22, r12
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	0e 94 56 03 	call	0x6ac	; 0x6ac <fputc>
 630:	89 14       	cp	r8, r9
 632:	38 f4       	brcc	.+14     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 634:	b6 01       	movw	r22, r12
 636:	80 e3       	ldi	r24, 0x30	; 48
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	0e 94 56 03 	call	0x6ac	; 0x6ac <fputc>
 63e:	9a 94       	dec	r9
 640:	f7 cf       	rjmp	.-18     	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 642:	8a 94       	dec	r8
 644:	f3 01       	movw	r30, r6
 646:	e8 0d       	add	r30, r8
 648:	f1 1d       	adc	r31, r1
 64a:	80 81       	ld	r24, Z
 64c:	b6 01       	movw	r22, r12
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	0e 94 56 03 	call	0x6ac	; 0x6ac <fputc>
 654:	81 10       	cpse	r8, r1
 656:	f5 cf       	rjmp	.-22     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 658:	22 20       	and	r2, r2
 65a:	09 f4       	brne	.+2      	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 65c:	42 ce       	rjmp	.-892    	; 0x2e2 <vfprintf+0x24>
 65e:	b6 01       	movw	r22, r12
 660:	80 e2       	ldi	r24, 0x20	; 32
 662:	90 e0       	ldi	r25, 0x00	; 0
 664:	0e 94 56 03 	call	0x6ac	; 0x6ac <fputc>
 668:	2a 94       	dec	r2
 66a:	f6 cf       	rjmp	.-20     	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 66c:	f6 01       	movw	r30, r12
 66e:	86 81       	ldd	r24, Z+6	; 0x06
 670:	97 81       	ldd	r25, Z+7	; 0x07
 672:	02 c0       	rjmp	.+4      	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
 674:	8f ef       	ldi	r24, 0xFF	; 255
 676:	9f ef       	ldi	r25, 0xFF	; 255
 678:	2b 96       	adiw	r28, 0x0b	; 11
 67a:	e2 e1       	ldi	r30, 0x12	; 18
 67c:	0c 94 0c 04 	jmp	0x818	; 0x818 <__epilogue_restores__>

00000680 <strnlen_P>:
 680:	fc 01       	movw	r30, r24
 682:	05 90       	lpm	r0, Z+
 684:	61 50       	subi	r22, 0x01	; 1
 686:	70 40       	sbci	r23, 0x00	; 0
 688:	01 10       	cpse	r0, r1
 68a:	d8 f7       	brcc	.-10     	; 0x682 <strnlen_P+0x2>
 68c:	80 95       	com	r24
 68e:	90 95       	com	r25
 690:	8e 0f       	add	r24, r30
 692:	9f 1f       	adc	r25, r31
 694:	08 95       	ret

00000696 <strnlen>:
 696:	fc 01       	movw	r30, r24
 698:	61 50       	subi	r22, 0x01	; 1
 69a:	70 40       	sbci	r23, 0x00	; 0
 69c:	01 90       	ld	r0, Z+
 69e:	01 10       	cpse	r0, r1
 6a0:	d8 f7       	brcc	.-10     	; 0x698 <strnlen+0x2>
 6a2:	80 95       	com	r24
 6a4:	90 95       	com	r25
 6a6:	8e 0f       	add	r24, r30
 6a8:	9f 1f       	adc	r25, r31
 6aa:	08 95       	ret

000006ac <fputc>:
 6ac:	0f 93       	push	r16
 6ae:	1f 93       	push	r17
 6b0:	cf 93       	push	r28
 6b2:	df 93       	push	r29
 6b4:	fb 01       	movw	r30, r22
 6b6:	23 81       	ldd	r18, Z+3	; 0x03
 6b8:	21 fd       	sbrc	r18, 1
 6ba:	03 c0       	rjmp	.+6      	; 0x6c2 <fputc+0x16>
 6bc:	8f ef       	ldi	r24, 0xFF	; 255
 6be:	9f ef       	ldi	r25, 0xFF	; 255
 6c0:	2c c0       	rjmp	.+88     	; 0x71a <fputc+0x6e>
 6c2:	22 ff       	sbrs	r18, 2
 6c4:	16 c0       	rjmp	.+44     	; 0x6f2 <fputc+0x46>
 6c6:	46 81       	ldd	r20, Z+6	; 0x06
 6c8:	57 81       	ldd	r21, Z+7	; 0x07
 6ca:	24 81       	ldd	r18, Z+4	; 0x04
 6cc:	35 81       	ldd	r19, Z+5	; 0x05
 6ce:	42 17       	cp	r20, r18
 6d0:	53 07       	cpc	r21, r19
 6d2:	44 f4       	brge	.+16     	; 0x6e4 <fputc+0x38>
 6d4:	a0 81       	ld	r26, Z
 6d6:	b1 81       	ldd	r27, Z+1	; 0x01
 6d8:	9d 01       	movw	r18, r26
 6da:	2f 5f       	subi	r18, 0xFF	; 255
 6dc:	3f 4f       	sbci	r19, 0xFF	; 255
 6de:	31 83       	std	Z+1, r19	; 0x01
 6e0:	20 83       	st	Z, r18
 6e2:	8c 93       	st	X, r24
 6e4:	26 81       	ldd	r18, Z+6	; 0x06
 6e6:	37 81       	ldd	r19, Z+7	; 0x07
 6e8:	2f 5f       	subi	r18, 0xFF	; 255
 6ea:	3f 4f       	sbci	r19, 0xFF	; 255
 6ec:	37 83       	std	Z+7, r19	; 0x07
 6ee:	26 83       	std	Z+6, r18	; 0x06
 6f0:	14 c0       	rjmp	.+40     	; 0x71a <fputc+0x6e>
 6f2:	8b 01       	movw	r16, r22
 6f4:	ec 01       	movw	r28, r24
 6f6:	fb 01       	movw	r30, r22
 6f8:	00 84       	ldd	r0, Z+8	; 0x08
 6fa:	f1 85       	ldd	r31, Z+9	; 0x09
 6fc:	e0 2d       	mov	r30, r0
 6fe:	09 95       	icall
 700:	89 2b       	or	r24, r25
 702:	e1 f6       	brne	.-72     	; 0x6bc <fputc+0x10>
 704:	d8 01       	movw	r26, r16
 706:	16 96       	adiw	r26, 0x06	; 6
 708:	8d 91       	ld	r24, X+
 70a:	9c 91       	ld	r25, X
 70c:	17 97       	sbiw	r26, 0x07	; 7
 70e:	01 96       	adiw	r24, 0x01	; 1
 710:	17 96       	adiw	r26, 0x07	; 7
 712:	9c 93       	st	X, r25
 714:	8e 93       	st	-X, r24
 716:	16 97       	sbiw	r26, 0x06	; 6
 718:	ce 01       	movw	r24, r28
 71a:	df 91       	pop	r29
 71c:	cf 91       	pop	r28
 71e:	1f 91       	pop	r17
 720:	0f 91       	pop	r16
 722:	08 95       	ret

00000724 <__ultoa_invert>:
 724:	fa 01       	movw	r30, r20
 726:	aa 27       	eor	r26, r26
 728:	28 30       	cpi	r18, 0x08	; 8
 72a:	51 f1       	breq	.+84     	; 0x780 <__ultoa_invert+0x5c>
 72c:	20 31       	cpi	r18, 0x10	; 16
 72e:	81 f1       	breq	.+96     	; 0x790 <__ultoa_invert+0x6c>
 730:	e8 94       	clt
 732:	6f 93       	push	r22
 734:	6e 7f       	andi	r22, 0xFE	; 254
 736:	6e 5f       	subi	r22, 0xFE	; 254
 738:	7f 4f       	sbci	r23, 0xFF	; 255
 73a:	8f 4f       	sbci	r24, 0xFF	; 255
 73c:	9f 4f       	sbci	r25, 0xFF	; 255
 73e:	af 4f       	sbci	r26, 0xFF	; 255
 740:	b1 e0       	ldi	r27, 0x01	; 1
 742:	3e d0       	rcall	.+124    	; 0x7c0 <__ultoa_invert+0x9c>
 744:	b4 e0       	ldi	r27, 0x04	; 4
 746:	3c d0       	rcall	.+120    	; 0x7c0 <__ultoa_invert+0x9c>
 748:	67 0f       	add	r22, r23
 74a:	78 1f       	adc	r23, r24
 74c:	89 1f       	adc	r24, r25
 74e:	9a 1f       	adc	r25, r26
 750:	a1 1d       	adc	r26, r1
 752:	68 0f       	add	r22, r24
 754:	79 1f       	adc	r23, r25
 756:	8a 1f       	adc	r24, r26
 758:	91 1d       	adc	r25, r1
 75a:	a1 1d       	adc	r26, r1
 75c:	6a 0f       	add	r22, r26
 75e:	71 1d       	adc	r23, r1
 760:	81 1d       	adc	r24, r1
 762:	91 1d       	adc	r25, r1
 764:	a1 1d       	adc	r26, r1
 766:	20 d0       	rcall	.+64     	; 0x7a8 <__ultoa_invert+0x84>
 768:	09 f4       	brne	.+2      	; 0x76c <__ultoa_invert+0x48>
 76a:	68 94       	set
 76c:	3f 91       	pop	r19
 76e:	2a e0       	ldi	r18, 0x0A	; 10
 770:	26 9f       	mul	r18, r22
 772:	11 24       	eor	r1, r1
 774:	30 19       	sub	r19, r0
 776:	30 5d       	subi	r19, 0xD0	; 208
 778:	31 93       	st	Z+, r19
 77a:	de f6       	brtc	.-74     	; 0x732 <__ultoa_invert+0xe>
 77c:	cf 01       	movw	r24, r30
 77e:	08 95       	ret
 780:	46 2f       	mov	r20, r22
 782:	47 70       	andi	r20, 0x07	; 7
 784:	40 5d       	subi	r20, 0xD0	; 208
 786:	41 93       	st	Z+, r20
 788:	b3 e0       	ldi	r27, 0x03	; 3
 78a:	0f d0       	rcall	.+30     	; 0x7aa <__ultoa_invert+0x86>
 78c:	c9 f7       	brne	.-14     	; 0x780 <__ultoa_invert+0x5c>
 78e:	f6 cf       	rjmp	.-20     	; 0x77c <__ultoa_invert+0x58>
 790:	46 2f       	mov	r20, r22
 792:	4f 70       	andi	r20, 0x0F	; 15
 794:	40 5d       	subi	r20, 0xD0	; 208
 796:	4a 33       	cpi	r20, 0x3A	; 58
 798:	18 f0       	brcs	.+6      	; 0x7a0 <__ultoa_invert+0x7c>
 79a:	49 5d       	subi	r20, 0xD9	; 217
 79c:	31 fd       	sbrc	r19, 1
 79e:	40 52       	subi	r20, 0x20	; 32
 7a0:	41 93       	st	Z+, r20
 7a2:	02 d0       	rcall	.+4      	; 0x7a8 <__ultoa_invert+0x84>
 7a4:	a9 f7       	brne	.-22     	; 0x790 <__ultoa_invert+0x6c>
 7a6:	ea cf       	rjmp	.-44     	; 0x77c <__ultoa_invert+0x58>
 7a8:	b4 e0       	ldi	r27, 0x04	; 4
 7aa:	a6 95       	lsr	r26
 7ac:	97 95       	ror	r25
 7ae:	87 95       	ror	r24
 7b0:	77 95       	ror	r23
 7b2:	67 95       	ror	r22
 7b4:	ba 95       	dec	r27
 7b6:	c9 f7       	brne	.-14     	; 0x7aa <__ultoa_invert+0x86>
 7b8:	00 97       	sbiw	r24, 0x00	; 0
 7ba:	61 05       	cpc	r22, r1
 7bc:	71 05       	cpc	r23, r1
 7be:	08 95       	ret
 7c0:	9b 01       	movw	r18, r22
 7c2:	ac 01       	movw	r20, r24
 7c4:	0a 2e       	mov	r0, r26
 7c6:	06 94       	lsr	r0
 7c8:	57 95       	ror	r21
 7ca:	47 95       	ror	r20
 7cc:	37 95       	ror	r19
 7ce:	27 95       	ror	r18
 7d0:	ba 95       	dec	r27
 7d2:	c9 f7       	brne	.-14     	; 0x7c6 <__ultoa_invert+0xa2>
 7d4:	62 0f       	add	r22, r18
 7d6:	73 1f       	adc	r23, r19
 7d8:	84 1f       	adc	r24, r20
 7da:	95 1f       	adc	r25, r21
 7dc:	a0 1d       	adc	r26, r0
 7de:	08 95       	ret

000007e0 <__prologue_saves__>:
 7e0:	2f 92       	push	r2
 7e2:	3f 92       	push	r3
 7e4:	4f 92       	push	r4
 7e6:	5f 92       	push	r5
 7e8:	6f 92       	push	r6
 7ea:	7f 92       	push	r7
 7ec:	8f 92       	push	r8
 7ee:	9f 92       	push	r9
 7f0:	af 92       	push	r10
 7f2:	bf 92       	push	r11
 7f4:	cf 92       	push	r12
 7f6:	df 92       	push	r13
 7f8:	ef 92       	push	r14
 7fa:	ff 92       	push	r15
 7fc:	0f 93       	push	r16
 7fe:	1f 93       	push	r17
 800:	cf 93       	push	r28
 802:	df 93       	push	r29
 804:	cd b7       	in	r28, 0x3d	; 61
 806:	de b7       	in	r29, 0x3e	; 62
 808:	ca 1b       	sub	r28, r26
 80a:	db 0b       	sbc	r29, r27
 80c:	0f b6       	in	r0, 0x3f	; 63
 80e:	f8 94       	cli
 810:	de bf       	out	0x3e, r29	; 62
 812:	0f be       	out	0x3f, r0	; 63
 814:	cd bf       	out	0x3d, r28	; 61
 816:	09 94       	ijmp

00000818 <__epilogue_restores__>:
 818:	2a 88       	ldd	r2, Y+18	; 0x12
 81a:	39 88       	ldd	r3, Y+17	; 0x11
 81c:	48 88       	ldd	r4, Y+16	; 0x10
 81e:	5f 84       	ldd	r5, Y+15	; 0x0f
 820:	6e 84       	ldd	r6, Y+14	; 0x0e
 822:	7d 84       	ldd	r7, Y+13	; 0x0d
 824:	8c 84       	ldd	r8, Y+12	; 0x0c
 826:	9b 84       	ldd	r9, Y+11	; 0x0b
 828:	aa 84       	ldd	r10, Y+10	; 0x0a
 82a:	b9 84       	ldd	r11, Y+9	; 0x09
 82c:	c8 84       	ldd	r12, Y+8	; 0x08
 82e:	df 80       	ldd	r13, Y+7	; 0x07
 830:	ee 80       	ldd	r14, Y+6	; 0x06
 832:	fd 80       	ldd	r15, Y+5	; 0x05
 834:	0c 81       	ldd	r16, Y+4	; 0x04
 836:	1b 81       	ldd	r17, Y+3	; 0x03
 838:	aa 81       	ldd	r26, Y+2	; 0x02
 83a:	b9 81       	ldd	r27, Y+1	; 0x01
 83c:	ce 0f       	add	r28, r30
 83e:	d1 1d       	adc	r29, r1
 840:	0f b6       	in	r0, 0x3f	; 63
 842:	f8 94       	cli
 844:	de bf       	out	0x3e, r29	; 62
 846:	0f be       	out	0x3f, r0	; 63
 848:	cd bf       	out	0x3d, r28	; 61
 84a:	ed 01       	movw	r28, r26
 84c:	08 95       	ret

0000084e <_exit>:
 84e:	f8 94       	cli

00000850 <__stop_program>:
 850:	ff cf       	rjmp	.-2      	; 0x850 <__stop_program>
