
external interrupts.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000084  00800200  0000035e  000003f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000035e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800284  00800284  00000476  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000476  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  000004e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001293  00000000  00000000  000005c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ce1  00000000  00000000  00001853  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006af  00000000  00000000  00002534  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003dc  00000000  00000000  00002be4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007a7  00000000  00000000  00002fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cf1  00000000  00000000  00003767  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00004458  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	af c0       	rjmp	.+350    	; 0x164 <__vector_1>
   6:	00 00       	nop
   8:	d6 c0       	rjmp	.+428    	; 0x1b6 <__vector_2>
   a:	00 00       	nop
   c:	fd c0       	rjmp	.+506    	; 0x208 <__vector_3>
   e:	00 00       	nop
  10:	24 c1       	rjmp	.+584    	; 0x25a <__vector_4>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	5a c1       	rjmp	.+692    	; 0x2da <__vector_9>
  26:	00 00       	nop
  28:	41 c1       	rjmp	.+642    	; 0x2ac <__vector_10>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee e5       	ldi	r30, 0x5E	; 94
  fc:	f3 e0       	ldi	r31, 0x03	; 3
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 38       	cpi	r26, 0x84	; 132
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e8       	ldi	r26, 0x84	; 132
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a6 38       	cpi	r26, 0x86	; 134
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	06 d1       	rcall	.+524    	; 0x32c <main>
 120:	1c c1       	rjmp	.+568    	; 0x35a <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <_Z10UART_Init0v>:
		if (buf[ptr] != '0') break;
	}
	for(;ptr>=0;--ptr) {
		UART_TxChar1(buf[ptr]);
	}
}
 124:	87 e6       	ldi	r24, 0x67	; 103
 126:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 12a:	88 e1       	ldi	r24, 0x18	; 24
 12c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 130:	86 e0       	ldi	r24, 0x06	; 6
 132:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 136:	08 95       	ret

00000138 <_Z12UART_TxChar0c>:
 138:	e0 ec       	ldi	r30, 0xC0	; 192
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	90 81       	ld	r25, Z
 13e:	95 ff       	sbrs	r25, 5
 140:	fd cf       	rjmp	.-6      	; 0x13c <_Z12UART_TxChar0c+0x4>
 142:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 146:	08 95       	ret

00000148 <_Z12printString0Pc>:
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	ec 01       	movw	r28, r24
 14e:	88 81       	ld	r24, Y
 150:	88 23       	and	r24, r24
 152:	29 f0       	breq	.+10     	; 0x15e <_Z12printString0Pc+0x16>
 154:	21 96       	adiw	r28, 0x01	; 1
 156:	f0 df       	rcall	.-32     	; 0x138 <_Z12UART_TxChar0c>
 158:	89 91       	ld	r24, Y+
 15a:	81 11       	cpse	r24, r1
 15c:	fc cf       	rjmp	.-8      	; 0x156 <_Z12printString0Pc+0xe>
 15e:	df 91       	pop	r29
 160:	cf 91       	pop	r28
 162:	08 95       	ret

00000164 <__vector_1>:

volatile int cnt_zero,cnt_one;


ISR(INT0_vect)
{
 164:	1f 92       	push	r1
 166:	0f 92       	push	r0
 168:	0f b6       	in	r0, 0x3f	; 63
 16a:	0f 92       	push	r0
 16c:	11 24       	eor	r1, r1
 16e:	0b b6       	in	r0, 0x3b	; 59
 170:	0f 92       	push	r0
 172:	2f 93       	push	r18
 174:	3f 93       	push	r19
 176:	4f 93       	push	r20
 178:	5f 93       	push	r21
 17a:	6f 93       	push	r22
 17c:	7f 93       	push	r23
 17e:	8f 93       	push	r24
 180:	9f 93       	push	r25
 182:	af 93       	push	r26
 184:	bf 93       	push	r27
 186:	ef 93       	push	r30
 188:	ff 93       	push	r31
	printString0("signal occured in pin21\n");
 18a:	80 e0       	ldi	r24, 0x00	; 0
 18c:	92 e0       	ldi	r25, 0x02	; 2
 18e:	dc df       	rcall	.-72     	; 0x148 <_Z12printString0Pc>
	
}
 190:	ff 91       	pop	r31
 192:	ef 91       	pop	r30
 194:	bf 91       	pop	r27
 196:	af 91       	pop	r26
 198:	9f 91       	pop	r25
 19a:	8f 91       	pop	r24
 19c:	7f 91       	pop	r23
 19e:	6f 91       	pop	r22
 1a0:	5f 91       	pop	r21
 1a2:	4f 91       	pop	r20
 1a4:	3f 91       	pop	r19
 1a6:	2f 91       	pop	r18
 1a8:	0f 90       	pop	r0
 1aa:	0b be       	out	0x3b, r0	; 59
 1ac:	0f 90       	pop	r0
 1ae:	0f be       	out	0x3f, r0	; 63
 1b0:	0f 90       	pop	r0
 1b2:	1f 90       	pop	r1
 1b4:	18 95       	reti

000001b6 <__vector_2>:
ISR(INT1_vect)
{
 1b6:	1f 92       	push	r1
 1b8:	0f 92       	push	r0
 1ba:	0f b6       	in	r0, 0x3f	; 63
 1bc:	0f 92       	push	r0
 1be:	11 24       	eor	r1, r1
 1c0:	0b b6       	in	r0, 0x3b	; 59
 1c2:	0f 92       	push	r0
 1c4:	2f 93       	push	r18
 1c6:	3f 93       	push	r19
 1c8:	4f 93       	push	r20
 1ca:	5f 93       	push	r21
 1cc:	6f 93       	push	r22
 1ce:	7f 93       	push	r23
 1d0:	8f 93       	push	r24
 1d2:	9f 93       	push	r25
 1d4:	af 93       	push	r26
 1d6:	bf 93       	push	r27
 1d8:	ef 93       	push	r30
 1da:	ff 93       	push	r31
	printString0("signal occured in pin20\n");
 1dc:	89 e1       	ldi	r24, 0x19	; 25
 1de:	92 e0       	ldi	r25, 0x02	; 2
 1e0:	b3 df       	rcall	.-154    	; 0x148 <_Z12printString0Pc>
	
}
 1e2:	ff 91       	pop	r31
 1e4:	ef 91       	pop	r30
 1e6:	bf 91       	pop	r27
 1e8:	af 91       	pop	r26
 1ea:	9f 91       	pop	r25
 1ec:	8f 91       	pop	r24
 1ee:	7f 91       	pop	r23
 1f0:	6f 91       	pop	r22
 1f2:	5f 91       	pop	r21
 1f4:	4f 91       	pop	r20
 1f6:	3f 91       	pop	r19
 1f8:	2f 91       	pop	r18
 1fa:	0f 90       	pop	r0
 1fc:	0b be       	out	0x3b, r0	; 59
 1fe:	0f 90       	pop	r0
 200:	0f be       	out	0x3f, r0	; 63
 202:	0f 90       	pop	r0
 204:	1f 90       	pop	r1
 206:	18 95       	reti

00000208 <__vector_3>:

ISR(INT2_vect)
{
 208:	1f 92       	push	r1
 20a:	0f 92       	push	r0
 20c:	0f b6       	in	r0, 0x3f	; 63
 20e:	0f 92       	push	r0
 210:	11 24       	eor	r1, r1
 212:	0b b6       	in	r0, 0x3b	; 59
 214:	0f 92       	push	r0
 216:	2f 93       	push	r18
 218:	3f 93       	push	r19
 21a:	4f 93       	push	r20
 21c:	5f 93       	push	r21
 21e:	6f 93       	push	r22
 220:	7f 93       	push	r23
 222:	8f 93       	push	r24
 224:	9f 93       	push	r25
 226:	af 93       	push	r26
 228:	bf 93       	push	r27
 22a:	ef 93       	push	r30
 22c:	ff 93       	push	r31
	printString0("signal occured in pin19\n");
 22e:	82 e3       	ldi	r24, 0x32	; 50
 230:	92 e0       	ldi	r25, 0x02	; 2
 232:	8a df       	rcall	.-236    	; 0x148 <_Z12printString0Pc>
	
}
 234:	ff 91       	pop	r31
 236:	ef 91       	pop	r30
 238:	bf 91       	pop	r27
 23a:	af 91       	pop	r26
 23c:	9f 91       	pop	r25
 23e:	8f 91       	pop	r24
 240:	7f 91       	pop	r23
 242:	6f 91       	pop	r22
 244:	5f 91       	pop	r21
 246:	4f 91       	pop	r20
 248:	3f 91       	pop	r19
 24a:	2f 91       	pop	r18
 24c:	0f 90       	pop	r0
 24e:	0b be       	out	0x3b, r0	; 59
 250:	0f 90       	pop	r0
 252:	0f be       	out	0x3f, r0	; 63
 254:	0f 90       	pop	r0
 256:	1f 90       	pop	r1
 258:	18 95       	reti

0000025a <__vector_4>:
ISR(INT3_vect)
{
 25a:	1f 92       	push	r1
 25c:	0f 92       	push	r0
 25e:	0f b6       	in	r0, 0x3f	; 63
 260:	0f 92       	push	r0
 262:	11 24       	eor	r1, r1
 264:	0b b6       	in	r0, 0x3b	; 59
 266:	0f 92       	push	r0
 268:	2f 93       	push	r18
 26a:	3f 93       	push	r19
 26c:	4f 93       	push	r20
 26e:	5f 93       	push	r21
 270:	6f 93       	push	r22
 272:	7f 93       	push	r23
 274:	8f 93       	push	r24
 276:	9f 93       	push	r25
 278:	af 93       	push	r26
 27a:	bf 93       	push	r27
 27c:	ef 93       	push	r30
 27e:	ff 93       	push	r31
	printString0("signal occured in pin18\n");
 280:	8b e4       	ldi	r24, 0x4B	; 75
 282:	92 e0       	ldi	r25, 0x02	; 2
 284:	61 df       	rcall	.-318    	; 0x148 <_Z12printString0Pc>
	
}
 286:	ff 91       	pop	r31
 288:	ef 91       	pop	r30
 28a:	bf 91       	pop	r27
 28c:	af 91       	pop	r26
 28e:	9f 91       	pop	r25
 290:	8f 91       	pop	r24
 292:	7f 91       	pop	r23
 294:	6f 91       	pop	r22
 296:	5f 91       	pop	r21
 298:	4f 91       	pop	r20
 29a:	3f 91       	pop	r19
 29c:	2f 91       	pop	r18
 29e:	0f 90       	pop	r0
 2a0:	0b be       	out	0x3b, r0	; 59
 2a2:	0f 90       	pop	r0
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	0f 90       	pop	r0
 2a8:	1f 90       	pop	r1
 2aa:	18 95       	reti

000002ac <__vector_10>:



ISR (PCINT1_vect)          //External interrupt_zero ISR
{
 2ac:	1f 92       	push	r1
 2ae:	0f 92       	push	r0
 2b0:	0f b6       	in	r0, 0x3f	; 63
 2b2:	0f 92       	push	r0
 2b4:	11 24       	eor	r1, r1
 2b6:	8f 93       	push	r24
 2b8:	9f 93       	push	r25
	cnt_zero++;
 2ba:	80 91 84 02 	lds	r24, 0x0284	; 0x800284 <__data_end>
 2be:	90 91 85 02 	lds	r25, 0x0285	; 0x800285 <__data_end+0x1>
 2c2:	01 96       	adiw	r24, 0x01	; 1
 2c4:	90 93 85 02 	sts	0x0285, r25	; 0x800285 <__data_end+0x1>
 2c8:	80 93 84 02 	sts	0x0284, r24	; 0x800284 <__data_end>
}
 2cc:	9f 91       	pop	r25
 2ce:	8f 91       	pop	r24
 2d0:	0f 90       	pop	r0
 2d2:	0f be       	out	0x3f, r0	; 63
 2d4:	0f 90       	pop	r0
 2d6:	1f 90       	pop	r1
 2d8:	18 95       	reti

000002da <__vector_9>:
ISR (PCINT0_vect)        //External interrupt_one ISR
{
 2da:	1f 92       	push	r1
 2dc:	0f 92       	push	r0
 2de:	0f b6       	in	r0, 0x3f	; 63
 2e0:	0f 92       	push	r0
 2e2:	11 24       	eor	r1, r1
 2e4:	0b b6       	in	r0, 0x3b	; 59
 2e6:	0f 92       	push	r0
 2e8:	2f 93       	push	r18
 2ea:	3f 93       	push	r19
 2ec:	4f 93       	push	r20
 2ee:	5f 93       	push	r21
 2f0:	6f 93       	push	r22
 2f2:	7f 93       	push	r23
 2f4:	8f 93       	push	r24
 2f6:	9f 93       	push	r25
 2f8:	af 93       	push	r26
 2fa:	bf 93       	push	r27
 2fc:	ef 93       	push	r30
 2fe:	ff 93       	push	r31
	printString0(" pin change is occured \n");
 300:	84 e6       	ldi	r24, 0x64	; 100
 302:	92 e0       	ldi	r25, 0x02	; 2
 304:	21 df       	rcall	.-446    	; 0x148 <_Z12printString0Pc>
}
 306:	ff 91       	pop	r31
 308:	ef 91       	pop	r30
 30a:	bf 91       	pop	r27
 30c:	af 91       	pop	r26
 30e:	9f 91       	pop	r25
 310:	8f 91       	pop	r24
 312:	7f 91       	pop	r23
 314:	6f 91       	pop	r22
 316:	5f 91       	pop	r21
 318:	4f 91       	pop	r20
 31a:	3f 91       	pop	r19
 31c:	2f 91       	pop	r18
 31e:	0f 90       	pop	r0
 320:	0b be       	out	0x3b, r0	; 59
 322:	0f 90       	pop	r0
 324:	0f be       	out	0x3f, r0	; 63
 326:	0f 90       	pop	r0
 328:	1f 90       	pop	r1
 32a:	18 95       	reti

0000032c <main>:

int main()
{UART_Init0();
 32c:	fb de       	rcall	.-522    	; 0x124 <_Z10UART_Init0v>
	//initTimer4_2560();
	//DDRC=0xff;   //Configure PORTC(Lcd databus) as output
	//DDRB=0x00;   //Configure INT0,INT1 as input and PORTD5-PORTD7(rs,rw,en) as output
	PORTB=0xff;
 32e:	8f ef       	ldi	r24, 0xFF	; 255
 330:	85 b9       	out	0x05, r24	; 5
	PCICR|=(1<<PCIE0);                    //interupt on PCINT7:0 is enables
 332:	e8 e6       	ldi	r30, 0x68	; 104
 334:	f0 e0       	ldi	r31, 0x00	; 0
 336:	80 81       	ld	r24, Z
 338:	81 60       	ori	r24, 0x01	; 1
 33a:	80 83       	st	Z, r24
	PCMSK0|=(1<<PCINT4)|(1<<PCINT5)|(1<<PCINT6);   // pins 10,11,12 are made to have interrupt
 33c:	eb e6       	ldi	r30, 0x6B	; 107
 33e:	f0 e0       	ldi	r31, 0x00	; 0
 340:	80 81       	ld	r24, Z
 342:	80 67       	ori	r24, 0x70	; 112
 344:	80 83       	st	Z, r24
	printString0("dmckd\n");
 346:	8d e7       	ldi	r24, 0x7D	; 125
 348:	92 e0       	ldi	r25, 0x02	; 2
 34a:	fe de       	rcall	.-516    	; 0x148 <_Z12printString0Pc>
	
	EICRA=(1<<ISC31)|(1<<ISC21)|(1<<ISC11)|(1<<ISC01);
 34c:	8a ea       	ldi	r24, 0xAA	; 170
 34e:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x700069>
	EIMSK=(1<<INT0)|(1<<INT1)|(1<<INT2)|(1<<INT3);
 352:	8f e0       	ldi	r24, 0x0F	; 15
 354:	8d bb       	out	0x1d, r24	; 29
	//initTimer4_2560();
	sei();     // Enable global interrupts by setting global interrupt enable bit in SREG
 356:	78 94       	sei
 358:	ff cf       	rjmp	.-2      	; 0x358 <main+0x2c>

0000035a <_exit>:
 35a:	f8 94       	cli

0000035c <__stop_program>:
 35c:	ff cf       	rjmp	.-2      	; 0x35c <__stop_program>
