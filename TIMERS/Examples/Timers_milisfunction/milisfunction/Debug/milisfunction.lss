
milisfunction.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800200  0000033e  000003d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000033e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800206  00800206  000003d8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003d8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000408  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00000448  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017be  00000000  00000000  000005a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ddc  00000000  00000000  00001d5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b7d  00000000  00000000  00002b3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000057c  00000000  00000000  000036b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b6a  00000000  00000000  00003c34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000016a0  00000000  00000000  0000479e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  00005e3e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6f c0       	rjmp	.+222    	; 0x124 <__vector_17>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee e3       	ldi	r30, 0x3E	; 62
  fc:	f3 e0       	ldi	r31, 0x03	; 3
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 30       	cpi	r26, 0x06	; 6
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a6 e0       	ldi	r26, 0x06	; 6
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	aa 30       	cpi	r26, 0x0A	; 10
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	cf d0       	rcall	.+414    	; 0x2be <main>
 120:	0c c1       	rjmp	.+536    	; 0x33a <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <__vector_17>:
{
	char gb_float_buff[10];
	sprintf(gb_float_buff,"%f",gb_value);
	GB_printString3(gb_float_buff);
	
}
 124:	1f 92       	push	r1
 126:	0f 92       	push	r0
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	0f 92       	push	r0
 12c:	11 24       	eor	r1, r1
 12e:	8f 93       	push	r24
 130:	9f 93       	push	r25
 132:	af 93       	push	r26
 134:	bf 93       	push	r27
 136:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <__data_end>
 13a:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <__data_end+0x1>
 13e:	a0 91 08 02 	lds	r26, 0x0208	; 0x800208 <__data_end+0x2>
 142:	b0 91 09 02 	lds	r27, 0x0209	; 0x800209 <__data_end+0x3>
 146:	01 96       	adiw	r24, 0x01	; 1
 148:	a1 1d       	adc	r26, r1
 14a:	b1 1d       	adc	r27, r1
 14c:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <__data_end>
 150:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <__data_end+0x1>
 154:	a0 93 08 02 	sts	0x0208, r26	; 0x800208 <__data_end+0x2>
 158:	b0 93 09 02 	sts	0x0209, r27	; 0x800209 <__data_end+0x3>
 15c:	bf 91       	pop	r27
 15e:	af 91       	pop	r26
 160:	9f 91       	pop	r25
 162:	8f 91       	pop	r24
 164:	0f 90       	pop	r0
 166:	0f be       	out	0x3f, r0	; 63
 168:	0f 90       	pop	r0
 16a:	1f 90       	pop	r1
 16c:	18 95       	reti

0000016e <_Z14GB_init_millism>:
 16e:	20 e4       	ldi	r18, 0x40	; 64
 170:	3f e1       	ldi	r19, 0x1F	; 31
 172:	40 e0       	ldi	r20, 0x00	; 0
 174:	50 e0       	ldi	r21, 0x00	; 0
 176:	bf d0       	rcall	.+382    	; 0x2f6 <__udivmodsi4>
 178:	8a e0       	ldi	r24, 0x0A	; 10
 17a:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
 17e:	bb 27       	eor	r27, r27
 180:	a5 2f       	mov	r26, r21
 182:	94 2f       	mov	r25, r20
 184:	83 2f       	mov	r24, r19
 186:	80 93 89 00 	sts	0x0089, r24	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 18a:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 18e:	ef e6       	ldi	r30, 0x6F	; 111
 190:	f0 e0       	ldi	r31, 0x00	; 0
 192:	80 81       	ld	r24, Z
 194:	82 60       	ori	r24, 0x02	; 2
 196:	80 83       	st	Z, r24
 198:	08 95       	ret

0000019a <_Z9GB_millisv>:
 19a:	60 e0       	ldi	r22, 0x00	; 0
 19c:	74 e2       	ldi	r23, 0x24	; 36
 19e:	84 ef       	ldi	r24, 0xF4	; 244
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	e5 df       	rcall	.-54     	; 0x16e <_Z14GB_init_millism>
 1a4:	f8 94       	cli
 1a6:	60 91 06 02 	lds	r22, 0x0206	; 0x800206 <__data_end>
 1aa:	70 91 07 02 	lds	r23, 0x0207	; 0x800207 <__data_end+0x1>
 1ae:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <__data_end+0x2>
 1b2:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <__data_end+0x3>
 1b6:	78 94       	sei
 1b8:	08 95       	ret

000001ba <_Z13GB_UART_Init0v>:
 1ba:	87 e6       	ldi	r24, 0x67	; 103
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 1c2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 1c6:	88 e9       	ldi	r24, 0x98	; 152
 1c8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 1cc:	08 95       	ret

000001ce <_Z15GB_UART_TxChar0j>:
 1ce:	e0 ec       	ldi	r30, 0xC0	; 192
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	90 81       	ld	r25, Z
 1d4:	95 ff       	sbrs	r25, 5
 1d6:	fd cf       	rjmp	.-6      	; 0x1d2 <_Z15GB_UART_TxChar0j+0x4>
 1d8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 1dc:	08 95       	ret

000001de <_Z15GB_printString0PKc>:
 1de:	cf 93       	push	r28
 1e0:	df 93       	push	r29
 1e2:	ec 01       	movw	r28, r24
 1e4:	88 81       	ld	r24, Y
 1e6:	88 23       	and	r24, r24
 1e8:	31 f0       	breq	.+12     	; 0x1f6 <_Z15GB_printString0PKc+0x18>
 1ea:	21 96       	adiw	r28, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	ef df       	rcall	.-34     	; 0x1ce <_Z15GB_UART_TxChar0j>
 1f0:	89 91       	ld	r24, Y+
 1f2:	81 11       	cpse	r24, r1
 1f4:	fb cf       	rjmp	.-10     	; 0x1ec <_Z15GB_printString0PKc+0xe>
 1f6:	df 91       	pop	r29
 1f8:	cf 91       	pop	r28
 1fa:	08 95       	ret

000001fc <_Z11GB_decimel0m>:
 1fc:	8f 92       	push	r8
 1fe:	9f 92       	push	r9
 200:	af 92       	push	r10
 202:	bf 92       	push	r11
 204:	ef 92       	push	r14
 206:	ff 92       	push	r15
 208:	0f 93       	push	r16
 20a:	1f 93       	push	r17
 20c:	cf 93       	push	r28
 20e:	df 93       	push	r29
 210:	00 d0       	rcall	.+0      	; 0x212 <_Z11GB_decimel0m+0x16>
 212:	1f 92       	push	r1
 214:	1f 92       	push	r1
 216:	cd b7       	in	r28, 0x3d	; 61
 218:	de b7       	in	r29, 0x3e	; 62
 21a:	8e 01       	movw	r16, r28
 21c:	0f 5f       	subi	r16, 0xFF	; 255
 21e:	1f 4f       	sbci	r17, 0xFF	; 255
 220:	7e 01       	movw	r14, r28
 222:	26 e0       	ldi	r18, 0x06	; 6
 224:	e2 0e       	add	r14, r18
 226:	f1 1c       	adc	r15, r1
 228:	0f 2e       	mov	r0, r31
 22a:	fa e0       	ldi	r31, 0x0A	; 10
 22c:	8f 2e       	mov	r8, r31
 22e:	91 2c       	mov	r9, r1
 230:	a1 2c       	mov	r10, r1
 232:	b1 2c       	mov	r11, r1
 234:	f0 2d       	mov	r31, r0
 236:	04 c0       	rjmp	.+8      	; 0x240 <_Z11GB_decimel0m+0x44>
 238:	8d 81       	ldd	r24, Y+5	; 0x05
 23a:	80 33       	cpi	r24, 0x30	; 48
 23c:	81 f0       	breq	.+32     	; 0x25e <_Z11GB_decimel0m+0x62>
 23e:	1a c0       	rjmp	.+52     	; 0x274 <_Z11GB_decimel0m+0x78>
 240:	a5 01       	movw	r20, r10
 242:	94 01       	movw	r18, r8
 244:	58 d0       	rcall	.+176    	; 0x2f6 <__udivmodsi4>
 246:	60 5d       	subi	r22, 0xD0	; 208
 248:	f8 01       	movw	r30, r16
 24a:	61 93       	st	Z+, r22
 24c:	8f 01       	movw	r16, r30
 24e:	62 2f       	mov	r22, r18
 250:	73 2f       	mov	r23, r19
 252:	84 2f       	mov	r24, r20
 254:	95 2f       	mov	r25, r21
 256:	ee 15       	cp	r30, r14
 258:	ff 05       	cpc	r31, r15
 25a:	91 f7       	brne	.-28     	; 0x240 <_Z11GB_decimel0m+0x44>
 25c:	ed cf       	rjmp	.-38     	; 0x238 <_Z11GB_decimel0m+0x3c>
 25e:	8c 81       	ldd	r24, Y+4	; 0x04
 260:	80 33       	cpi	r24, 0x30	; 48
 262:	b9 f4       	brne	.+46     	; 0x292 <_Z11GB_decimel0m+0x96>
 264:	8b 81       	ldd	r24, Y+3	; 0x03
 266:	80 33       	cpi	r24, 0x30	; 48
 268:	b1 f4       	brne	.+44     	; 0x296 <_Z11GB_decimel0m+0x9a>
 26a:	8a 81       	ldd	r24, Y+2	; 0x02
 26c:	80 33       	cpi	r24, 0x30	; 48
 26e:	a9 f4       	brne	.+42     	; 0x29a <_Z11GB_decimel0m+0x9e>
 270:	10 e0       	ldi	r17, 0x00	; 0
 272:	01 c0       	rjmp	.+2      	; 0x276 <_Z11GB_decimel0m+0x7a>
 274:	14 e0       	ldi	r17, 0x04	; 4
 276:	e1 e0       	ldi	r30, 0x01	; 1
 278:	f0 e0       	ldi	r31, 0x00	; 0
 27a:	ec 0f       	add	r30, r28
 27c:	fd 1f       	adc	r31, r29
 27e:	e1 0f       	add	r30, r17
 280:	f1 1d       	adc	r31, r1
 282:	17 fd       	sbrc	r17, 7
 284:	fa 95       	dec	r31
 286:	80 81       	ld	r24, Z
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	a1 df       	rcall	.-190    	; 0x1ce <_Z15GB_UART_TxChar0j>
 28c:	11 50       	subi	r17, 0x01	; 1
 28e:	9a f7       	brpl	.-26     	; 0x276 <_Z11GB_decimel0m+0x7a>
 290:	06 c0       	rjmp	.+12     	; 0x29e <_Z11GB_decimel0m+0xa2>
 292:	13 e0       	ldi	r17, 0x03	; 3
 294:	f0 cf       	rjmp	.-32     	; 0x276 <_Z11GB_decimel0m+0x7a>
 296:	12 e0       	ldi	r17, 0x02	; 2
 298:	ee cf       	rjmp	.-36     	; 0x276 <_Z11GB_decimel0m+0x7a>
 29a:	11 e0       	ldi	r17, 0x01	; 1
 29c:	ec cf       	rjmp	.-40     	; 0x276 <_Z11GB_decimel0m+0x7a>
 29e:	0f 90       	pop	r0
 2a0:	0f 90       	pop	r0
 2a2:	0f 90       	pop	r0
 2a4:	0f 90       	pop	r0
 2a6:	0f 90       	pop	r0
 2a8:	df 91       	pop	r29
 2aa:	cf 91       	pop	r28
 2ac:	1f 91       	pop	r17
 2ae:	0f 91       	pop	r16
 2b0:	ff 90       	pop	r15
 2b2:	ef 90       	pop	r14
 2b4:	bf 90       	pop	r11
 2b6:	af 90       	pop	r10
 2b8:	9f 90       	pop	r9
 2ba:	8f 90       	pop	r8
 2bc:	08 95       	ret

000002be <main>:
 */

#include <GB_millis.h>
#include <GB_uarts.h>
int main(void)
{   GB_UART_Init0();
 2be:	7d df       	rcall	.-262    	; 0x1ba <_Z13GB_UART_Init0v>
	GB_init_millis(16000000UL); //frequency the atmega328p is running at
 2c0:	60 e0       	ldi	r22, 0x00	; 0
 2c2:	74 e2       	ldi	r23, 0x24	; 36
 2c4:	84 ef       	ldi	r24, 0xF4	; 244
 2c6:	90 e0       	ldi	r25, 0x00	; 0
	unsigned long gb_prev_millis; //the last time the led was toggled
	gb_prev_millis = GB_millis();
 2c8:	52 df       	rcall	.-348    	; 0x16e <_Z14GB_init_millism>
 2ca:	67 df       	rcall	.-306    	; 0x19a <_Z9GB_millisv>
 2cc:	6b 01       	movw	r12, r22
	sei();
 2ce:	7c 01       	movw	r14, r24
	for(;;)
	{
		if (GB_millis() - gb_prev_millis < 1000)
 2d0:	78 94       	sei
 2d2:	63 df       	rcall	.-314    	; 0x19a <_Z9GB_millisv>
 2d4:	dc 01       	movw	r26, r24
 2d6:	cb 01       	movw	r24, r22
 2d8:	8c 19       	sub	r24, r12
 2da:	9d 09       	sbc	r25, r13
 2dc:	ae 09       	sbc	r26, r14
 2de:	bf 09       	sbc	r27, r15
 2e0:	88 3e       	cpi	r24, 0xE8	; 232
 2e2:	93 40       	sbci	r25, 0x03	; 3
 2e4:	a1 05       	cpc	r26, r1
		{
			//printString0("kunal");
			GB_decimel0(GB_millis());
 2e6:	b1 05       	cpc	r27, r1
 2e8:	a0 f7       	brcc	.-24     	; 0x2d2 <main+0x14>
 2ea:	57 df       	rcall	.-338    	; 0x19a <_Z9GB_millisv>
			GB_printString0("\n");
 2ec:	87 df       	rcall	.-242    	; 0x1fc <_Z11GB_decimel0m>
 2ee:	83 e0       	ldi	r24, 0x03	; 3
 2f0:	92 e0       	ldi	r25, 0x02	; 2
 2f2:	75 df       	rcall	.-278    	; 0x1de <_Z15GB_printString0PKc>
 2f4:	ee cf       	rjmp	.-36     	; 0x2d2 <main+0x14>

000002f6 <__udivmodsi4>:
 2f6:	a1 e2       	ldi	r26, 0x21	; 33
 2f8:	1a 2e       	mov	r1, r26
 2fa:	aa 1b       	sub	r26, r26
 2fc:	bb 1b       	sub	r27, r27
 2fe:	fd 01       	movw	r30, r26
 300:	0d c0       	rjmp	.+26     	; 0x31c <__udivmodsi4_ep>

00000302 <__udivmodsi4_loop>:
 302:	aa 1f       	adc	r26, r26
 304:	bb 1f       	adc	r27, r27
 306:	ee 1f       	adc	r30, r30
 308:	ff 1f       	adc	r31, r31
 30a:	a2 17       	cp	r26, r18
 30c:	b3 07       	cpc	r27, r19
 30e:	e4 07       	cpc	r30, r20
 310:	f5 07       	cpc	r31, r21
 312:	20 f0       	brcs	.+8      	; 0x31c <__udivmodsi4_ep>
 314:	a2 1b       	sub	r26, r18
 316:	b3 0b       	sbc	r27, r19
 318:	e4 0b       	sbc	r30, r20
 31a:	f5 0b       	sbc	r31, r21

0000031c <__udivmodsi4_ep>:
 31c:	66 1f       	adc	r22, r22
 31e:	77 1f       	adc	r23, r23
 320:	88 1f       	adc	r24, r24
 322:	99 1f       	adc	r25, r25
 324:	1a 94       	dec	r1
 326:	69 f7       	brne	.-38     	; 0x302 <__udivmodsi4_loop>
 328:	60 95       	com	r22
 32a:	70 95       	com	r23
 32c:	80 95       	com	r24
 32e:	90 95       	com	r25
 330:	9b 01       	movw	r18, r22
 332:	ac 01       	movw	r20, r24
 334:	bd 01       	movw	r22, r26
 336:	cf 01       	movw	r24, r30
 338:	08 95       	ret

0000033a <_exit>:
 33a:	f8 94       	cli

0000033c <__stop_program>:
 33c:	ff cf       	rjmp	.-2      	; 0x33c <__stop_program>
