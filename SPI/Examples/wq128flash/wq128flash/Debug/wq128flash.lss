
wq128flash.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800200  00000356  000003ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000356  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000003e8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000418  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000228  00000000  00000000  00000458  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002443  00000000  00000000  00000680  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ee7  00000000  00000000  00002ac3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000115f  00000000  00000000  000039aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000730  00000000  00000000  00004b0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000f9f  00000000  00000000  0000523c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001f75  00000000  00000000  000061db  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000218  00000000  00000000  00008150  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 e5       	ldi	r30, 0x56	; 86
  fc:	f3 e0       	ldi	r31, 0x03	; 3
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 31       	cpi	r26, 0x1E	; 30
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	ae e1       	ldi	r26, 0x1E	; 30
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ae 31       	cpi	r26, 0x1E	; 30
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	b4 d0       	rcall	.+360    	; 0x288 <main>
 120:	18 c1       	rjmp	.+560    	; 0x352 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <_Z10UART_Init0v>:
	for ( uint8_t x =0;x<8;x++)
	uinque[x] = MA_SPI0_read_byte();

	Flash_CE_pin_high;
	
 124:	87 e6       	ldi	r24, 0x67	; 103
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
 12c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
 130:	88 e9       	ldi	r24, 0x98	; 152
 132:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
 136:	08 95       	ret

00000138 <_Z12UART_TxChar0j>:
 138:	e0 ec       	ldi	r30, 0xC0	; 192
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	90 81       	ld	r25, Z
 13e:	95 ff       	sbrs	r25, 5
 140:	fd cf       	rjmp	.-6      	; 0x13c <_Z12UART_TxChar0j+0x4>
 142:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 146:	08 95       	ret

00000148 <_Z12printString0PKc>:
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	ec 01       	movw	r28, r24
 14e:	88 81       	ld	r24, Y
 150:	88 23       	and	r24, r24
 152:	31 f0       	breq	.+12     	; 0x160 <_Z12printString0PKc+0x18>
 154:	21 96       	adiw	r28, 0x01	; 1
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	ef df       	rcall	.-34     	; 0x138 <_Z12UART_TxChar0j>
 15a:	89 91       	ld	r24, Y+
 15c:	81 11       	cpse	r24, r1
 15e:	fb cf       	rjmp	.-10     	; 0x156 <_Z12printString0PKc+0xe>
 160:	df 91       	pop	r29
 162:	cf 91       	pop	r28
 164:	08 95       	ret

00000166 <_Z19MA_SPI0_init_masterv>:
 166:	84 b1       	in	r24, 0x04	; 4
 168:	87 60       	ori	r24, 0x07	; 7
 16a:	84 b9       	out	0x04, r24	; 4
 16c:	8c b5       	in	r24, 0x2c	; 44
 16e:	81 65       	ori	r24, 0x51	; 81
 170:	8c bd       	out	0x2c, r24	; 44
 172:	8c b5       	in	r24, 0x2c	; 44
 174:	80 62       	ori	r24, 0x20	; 32
 176:	8c bd       	out	0x2c, r24	; 44
 178:	8c b5       	in	r24, 0x2c	; 44
 17a:	83 7f       	andi	r24, 0xF3	; 243
 17c:	8c bd       	out	0x2c, r24	; 44
 17e:	08 95       	ret

00000180 <_Z23MA_SPI0_send_byte_contih>:
 180:	8e bd       	out	0x2e, r24	; 46
 182:	0d b4       	in	r0, 0x2d	; 45
 184:	07 fe       	sbrs	r0, 7
 186:	fd cf       	rjmp	.-6      	; 0x182 <_Z23MA_SPI0_send_byte_contih+0x2>
 188:	08 95       	ret

0000018a <_Z17MA_SPI0_read_bytev>:
 18a:	8f ef       	ldi	r24, 0xFF	; 255
 18c:	8e bd       	out	0x2e, r24	; 46
 18e:	0d b4       	in	r0, 0x2d	; 45
 190:	07 fe       	sbrs	r0, 7
 192:	fd cf       	rjmp	.-6      	; 0x18e <_Z17MA_SPI0_read_bytev+0x4>
 194:	8e b5       	in	r24, 0x2e	; 46
 196:	08 95       	ret

00000198 <_Z17WriteEnable_flashv>:
 198:	28 98       	cbi	0x05, 0	; 5
 19a:	86 e0       	ldi	r24, 0x06	; 6
 19c:	f1 df       	rcall	.-30     	; 0x180 <_Z23MA_SPI0_send_byte_contih>
 19e:	28 9a       	sbi	0x05, 0	; 5
 1a0:	08 95       	ret

000001a2 <_Z15Write_wq12_datamPch>:
 1a2:	ef 92       	push	r14
 1a4:	ff 92       	push	r15
 1a6:	0f 93       	push	r16
 1a8:	1f 93       	push	r17
 1aa:	cf 93       	push	r28
 1ac:	df 93       	push	r29
 1ae:	c6 2f       	mov	r28, r22
 1b0:	d7 2f       	mov	r29, r23
 1b2:	08 2f       	mov	r16, r24
 1b4:	7a 01       	movw	r14, r20
 1b6:	12 2f       	mov	r17, r18
 1b8:	ef df       	rcall	.-34     	; 0x198 <_Z17WriteEnable_flashv>
 1ba:	28 98       	cbi	0x05, 0	; 5
 1bc:	82 e0       	ldi	r24, 0x02	; 2
 1be:	e0 df       	rcall	.-64     	; 0x180 <_Z23MA_SPI0_send_byte_contih>
 1c0:	80 2f       	mov	r24, r16
 1c2:	de df       	rcall	.-68     	; 0x180 <_Z23MA_SPI0_send_byte_contih>
 1c4:	8d 2f       	mov	r24, r29
 1c6:	dc df       	rcall	.-72     	; 0x180 <_Z23MA_SPI0_send_byte_contih>
 1c8:	8c 2f       	mov	r24, r28
 1ca:	da df       	rcall	.-76     	; 0x180 <_Z23MA_SPI0_send_byte_contih>
 1cc:	11 23       	and	r17, r17
 1ce:	69 f0       	breq	.+26     	; 0x1ea <_Z15Write_wq12_datamPch+0x48>
 1d0:	e7 01       	movw	r28, r14
 1d2:	11 50       	subi	r17, 0x01	; 1
 1d4:	01 2f       	mov	r16, r17
 1d6:	10 e0       	ldi	r17, 0x00	; 0
 1d8:	0f 5f       	subi	r16, 0xFF	; 255
 1da:	1f 4f       	sbci	r17, 0xFF	; 255
 1dc:	0e 0d       	add	r16, r14
 1de:	1f 1d       	adc	r17, r15
 1e0:	89 91       	ld	r24, Y+
 1e2:	ce df       	rcall	.-100    	; 0x180 <_Z23MA_SPI0_send_byte_contih>
 1e4:	c0 17       	cp	r28, r16
 1e6:	d1 07       	cpc	r29, r17
 1e8:	d9 f7       	brne	.-10     	; 0x1e0 <_Z15Write_wq12_datamPch+0x3e>
 1ea:	28 9a       	sbi	0x05, 0	; 5
 1ec:	df 91       	pop	r29
 1ee:	cf 91       	pop	r28
 1f0:	1f 91       	pop	r17
 1f2:	0f 91       	pop	r16
 1f4:	ff 90       	pop	r15
 1f6:	ef 90       	pop	r14
 1f8:	08 95       	ret

000001fa <_Z15read_wq128_datamPch>:
 1fa:	cf 92       	push	r12
 1fc:	df 92       	push	r13
 1fe:	ef 92       	push	r14
 200:	ff 92       	push	r15
 202:	0f 93       	push	r16
 204:	1f 93       	push	r17
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	1f 92       	push	r1
 20c:	cd b7       	in	r28, 0x3d	; 61
 20e:	de b7       	in	r29, 0x3e	; 62
 210:	16 2f       	mov	r17, r22
 212:	d7 2e       	mov	r13, r23
 214:	c8 2e       	mov	r12, r24
 216:	7a 01       	movw	r14, r20
 218:	02 2f       	mov	r16, r18
 21a:	19 82       	std	Y+1, r1	; 0x01
 21c:	28 98       	cbi	0x05, 0	; 5
 21e:	83 e0       	ldi	r24, 0x03	; 3
 220:	af df       	rcall	.-162    	; 0x180 <_Z23MA_SPI0_send_byte_contih>
 222:	8c 2d       	mov	r24, r12
 224:	ad df       	rcall	.-166    	; 0x180 <_Z23MA_SPI0_send_byte_contih>
 226:	8d 2d       	mov	r24, r13
 228:	ab df       	rcall	.-170    	; 0x180 <_Z23MA_SPI0_send_byte_contih>
 22a:	81 2f       	mov	r24, r17
 22c:	a9 df       	rcall	.-174    	; 0x180 <_Z23MA_SPI0_send_byte_contih>
 22e:	00 23       	and	r16, r16
 230:	59 f0       	breq	.+22     	; 0x248 <_Z15read_wq128_datamPch+0x4e>
 232:	10 e0       	ldi	r17, 0x00	; 0
 234:	aa df       	rcall	.-172    	; 0x18a <_Z17MA_SPI0_read_bytev>
 236:	89 83       	std	Y+1, r24	; 0x01
 238:	89 81       	ldd	r24, Y+1	; 0x01
 23a:	f7 01       	movw	r30, r14
 23c:	e1 0f       	add	r30, r17
 23e:	f1 1d       	adc	r31, r1
 240:	80 83       	st	Z, r24
 242:	1f 5f       	subi	r17, 0xFF	; 255
 244:	01 13       	cpse	r16, r17
 246:	f6 cf       	rjmp	.-20     	; 0x234 <_Z15read_wq128_datamPch+0x3a>
 248:	28 9a       	sbi	0x05, 0	; 5
 24a:	0f 90       	pop	r0
 24c:	df 91       	pop	r29
 24e:	cf 91       	pop	r28
 250:	1f 91       	pop	r17
 252:	0f 91       	pop	r16
 254:	ff 90       	pop	r15
 256:	ef 90       	pop	r14
 258:	df 90       	pop	r13
 25a:	cf 90       	pop	r12
 25c:	08 95       	ret

0000025e <_Z15erase_sector4KBm>:
 25e:	1f 93       	push	r17
 260:	cf 93       	push	r28
 262:	df 93       	push	r29
 264:	c6 2f       	mov	r28, r22
 266:	d7 2f       	mov	r29, r23
 268:	18 2f       	mov	r17, r24
 26a:	96 df       	rcall	.-212    	; 0x198 <_Z17WriteEnable_flashv>
 26c:	28 98       	cbi	0x05, 0	; 5
 26e:	80 e2       	ldi	r24, 0x20	; 32
 270:	87 df       	rcall	.-242    	; 0x180 <_Z23MA_SPI0_send_byte_contih>
 272:	81 2f       	mov	r24, r17
 274:	85 df       	rcall	.-246    	; 0x180 <_Z23MA_SPI0_send_byte_contih>
 276:	8d 2f       	mov	r24, r29
 278:	83 df       	rcall	.-250    	; 0x180 <_Z23MA_SPI0_send_byte_contih>
 27a:	8c 2f       	mov	r24, r28
 27c:	81 df       	rcall	.-254    	; 0x180 <_Z23MA_SPI0_send_byte_contih>
 27e:	28 9a       	sbi	0x05, 0	; 5
 280:	df 91       	pop	r29
 282:	cf 91       	pop	r28
 284:	1f 91       	pop	r17
 286:	08 95       	ret

00000288 <main>:
#include "w25q128jv.h"

//#define Flash_CE PB0

int main(void)
{
 288:	cf 93       	push	r28
 28a:	df 93       	push	r29
 28c:	cd b7       	in	r28, 0x3d	; 61
 28e:	de b7       	in	r29, 0x3e	; 62
 290:	e2 97       	sbiw	r28, 0x32	; 50
 292:	0f b6       	in	r0, 0x3f	; 63
 294:	f8 94       	cli
 296:	de bf       	out	0x3e, r29	; 62
 298:	0f be       	out	0x3f, r0	; 63
 29a:	cd bf       	out	0x3d, r28	; 61
	UART_Init0();
 29c:	43 df       	rcall	.-378    	; 0x124 <_Z10UART_Init0v>
	MA_SPI0_init_master();
 29e:	63 df       	rcall	.-314    	; 0x166 <_Z19MA_SPI0_init_masterv>
 2a0:	20 9a       	sbi	0x04, 0	; 4
﻿void pinMode( uint8_t pin , uint8_t volatile *pin_data_direction_register, bool Mode )
{
	if(Mode==OUTPUT)
	*pin_data_direction_register|= (1 << pin);
 2a2:	86 e1       	ldi	r24, 0x16	; 22
	uint8_t x = 0x00;
	uint8_t y = 0x00;
	uint8_t z = 0x00;
	uint8_t p = 0x00;
	
	char senddata[25] = "Kunal gupta gettobyte";
 2a4:	e0 e0       	ldi	r30, 0x00	; 0
 2a6:	f2 e0       	ldi	r31, 0x02	; 2
 2a8:	de 01       	movw	r26, r28
 2aa:	11 96       	adiw	r26, 0x01	; 1
 2ac:	01 90       	ld	r0, Z+
 2ae:	0d 92       	st	X+, r0
 2b0:	8a 95       	dec	r24
 2b2:	e1 f7       	brne	.-8      	; 0x2ac <main+0x24>
 2b4:	fe 01       	movw	r30, r28
 2b6:	77 96       	adiw	r30, 0x17	; 23
 2b8:	83 e0       	ldi	r24, 0x03	; 3
 2ba:	df 01       	movw	r26, r30
 2bc:	1d 92       	st	X+, r1
 2be:	8a 95       	dec	r24
 2c0:	e9 f7       	brne	.-6      	; 0x2bc <main+0x34>
 2c2:	33 96       	adiw	r30, 0x03	; 3
	char receivedata[25] = {0};
 2c4:	89 e1       	ldi	r24, 0x19	; 25
 2c6:	df 01       	movw	r26, r30
 2c8:	1d 92       	st	X+, r1
 2ca:	8a 95       	dec	r24
 2cc:	e9 f7       	brne	.-6      	; 0x2c8 <main+0x40>
 2ce:	60 e0       	ldi	r22, 0x00	; 0
	uint8_t SR1 = 0;
	
    while (1) 
    {
		
	erase_sector4KB(read_addr2);
 2d0:	70 e0       	ldi	r23, 0x00	; 0
 2d2:	82 e0       	ldi	r24, 0x02	; 2
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	c3 df       	rcall	.-122    	; 0x25e <_Z15erase_sector4KBm>
 2d8:	bf ef       	ldi	r27, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2da:	20 e7       	ldi	r18, 0x70	; 112
 2dc:	82 e0       	ldi	r24, 0x02	; 2
 2de:	b1 50       	subi	r27, 0x01	; 1
 2e0:	20 40       	sbci	r18, 0x00	; 0
 2e2:	80 40       	sbci	r24, 0x00	; 0
 2e4:	e1 f7       	brne	.-8      	; 0x2de <main+0x56>
 2e6:	00 c0       	rjmp	.+0      	; 0x2e8 <main+0x60>
 2e8:	00 00       	nop
 2ea:	24 e1       	ldi	r18, 0x14	; 20
	_delay_ms(50);
	
	
	Write_wq12_data(read_addr2,senddata,20);
 2ec:	ae 01       	movw	r20, r28
 2ee:	4f 5f       	subi	r20, 0xFF	; 255
 2f0:	5f 4f       	sbci	r21, 0xFF	; 255
 2f2:	60 e0       	ldi	r22, 0x00	; 0
 2f4:	70 e0       	ldi	r23, 0x00	; 0
 2f6:	82 e0       	ldi	r24, 0x02	; 2
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	53 df       	rcall	.-346    	; 0x1a2 <_Z15Write_wq12_datamPch>
 2fc:	9f ef       	ldi	r25, 0xFF	; 255
 2fe:	a3 ed       	ldi	r26, 0xD3	; 211
 300:	b0 e3       	ldi	r27, 0x30	; 48
 302:	91 50       	subi	r25, 0x01	; 1
 304:	a0 40       	sbci	r26, 0x00	; 0
 306:	b0 40       	sbci	r27, 0x00	; 0
 308:	e1 f7       	brne	.-8      	; 0x302 <main+0x7a>
 30a:	00 c0       	rjmp	.+0      	; 0x30c <main+0x84>
 30c:	00 00       	nop
 30e:	22 e1       	ldi	r18, 0x12	; 18
	_delay_ms(1000);
	read_wq128_data(read_addr2,receivedata,18);
 310:	ae 01       	movw	r20, r28
 312:	46 5e       	subi	r20, 0xE6	; 230
 314:	5f 4f       	sbci	r21, 0xFF	; 255
 316:	60 e0       	ldi	r22, 0x00	; 0
 318:	70 e0       	ldi	r23, 0x00	; 0
 31a:	82 e0       	ldi	r24, 0x02	; 2
 31c:	90 e0       	ldi	r25, 0x00	; 0
 31e:	6d df       	rcall	.-294    	; 0x1fa <_Z15read_wq128_datamPch>
 320:	2f ef       	ldi	r18, 0xFF	; 255
 322:	80 e7       	ldi	r24, 0x70	; 112
 324:	92 e0       	ldi	r25, 0x02	; 2
 326:	21 50       	subi	r18, 0x01	; 1
 328:	80 40       	sbci	r24, 0x00	; 0
 32a:	90 40       	sbci	r25, 0x00	; 0
 32c:	e1 f7       	brne	.-8      	; 0x326 <main+0x9e>
 32e:	00 c0       	rjmp	.+0      	; 0x330 <main+0xa8>
 330:	00 00       	nop
	_delay_ms(50);
	printString0(receivedata);
 332:	ce 01       	movw	r24, r28
 334:	4a 96       	adiw	r24, 0x1a	; 26
 336:	08 df       	rcall	.-496    	; 0x148 <_Z12printString0PKc>
		printString0("\n");
 338:	8c e1       	ldi	r24, 0x1C	; 28
 33a:	92 e0       	ldi	r25, 0x02	; 2
 33c:	05 df       	rcall	.-502    	; 0x148 <_Z12printString0PKc>
 33e:	af ef       	ldi	r26, 0xFF	; 255
 340:	b1 ee       	ldi	r27, 0xE1	; 225
 342:	24 e0       	ldi	r18, 0x04	; 4
 344:	a1 50       	subi	r26, 0x01	; 1
 346:	b0 40       	sbci	r27, 0x00	; 0
 348:	20 40       	sbci	r18, 0x00	; 0
 34a:	e1 f7       	brne	.-8      	; 0x344 <main+0xbc>
 34c:	00 c0       	rjmp	.+0      	; 0x34e <main+0xc6>
 34e:	00 00       	nop
 350:	be cf       	rjmp	.-132    	; 0x2ce <main+0x46>

00000352 <_exit>:
 352:	f8 94       	cli

00000354 <__stop_program>:
 354:	ff cf       	rjmp	.-2      	; 0x354 <__stop_program>
